var pGroupName = $("#pGroupName").val();

if (pGroupName=='영업본부') {
  $("#hideDiv").hide();
  $("#hideButton").css("display", "none");
  $("#bankBtn").css("display", "none");
  $(".hideButton").css("display", "none");
  $(".hideInput").hide();
  $('.accountlist input').prop('readonly', true);
}

var pGroupName = $('#pGroupName').val();

// get 값 가져오는 함수
function getParam(sname) {
  var params = location.search.substr(location.search.indexOf("?") + 1);
  var sval = "";
  params = params.split("&");
  for (var i = 0; i < params.length; i++) {
    temp = params[i].split("=");
    if ([temp[0]] == sname) {
      sval = temp[1];
    }
  }
  return sval;
}

// 숫자만 입력 함수
function onlyNumber(obj) {
  var val=obj.value;
  var re=/[^0-9]/gi;
  obj.value=val.replace(re,"");
}

// 숫자와 '-' 입력 함수
function onlyNumHipen(obj) {
  var val=obj.value;
  var re=/[^0-9-]/gi;
  obj.value=val.replace(re,"");
}

// 숫자 콤마 제거 함수
function replace(money) {
  return money.replace(/,/g, '');
}

// 리스트 하단으로 이동
$('.moveBottom').click(function() {
  $('.table-box').scrollTop($('.table-box')[0].scrollHeight);
});

// 리스트 상단으로 이동
$('.moveTop').click(function() {
  $('.table-box').scrollTop($('.table-box')[0]);
});

// 정렬 단축키
$(document).keyup(function(key) {
  if (key.keyCode == 119 && key.shiftKey) {
    $('#sortBtn').click();
  }
  if (key.keyCode == 120 && key.shiftKey) {
    $('#enduserBtn').click();
  }
});

// 은행 구분 리스트 배열에 입력
var bankTypeHidden = '';
var bankTypeArr = [];

for (var i = 0; i < $('.bankTypeHidden').length; i++) {
  bankTypeHidden += "<option value=" + $('.bankTypeHidden input').eq(i).val() + ">" + $('.bankTypeHidden input').eq(i).val() + "</option>";
  bankTypeArr.push($('.bankTypeHidden input').eq(i).val());
}

// 추가 버튼 클릭 시 이벤트
$('#itemAdd').click(function() {
  var contents = '';
  contents += '<tr class="row" id="noBa">';
  contents += '<input type="hidden" style="color:red" name="idx" value="" />'
  contents += "<td class='cell0'><input style='border:solid 1px green; border-radius: 10px;' type='checkbox' name='delRow'></td>";
  contents += "<td class='cell1' scope='row'><input style='width:100%; border:solid 1px green; font-size: 11px;' type='text' name='dateOfIssue' onkeyup='auto_date_format(event, this); onlyNumHipen(this);' onkeypress='auto_date_format(event, this); onlyNumHipen(this);' maxlength='10' /></td>";
  contents += "<td class='cell2' scope='row'><input style='width:100%; border:solid 1px green; font-size: 11px;' type='text' name='fixedDate' onkeyup='auto_date_format(event, this); onlyNumHipen(this);' onkeypress='auto_date_format(event, this); onlyNumHipen(this);' maxlength='10' /></td>";
  contents += "<td class='cell3' scope='row'><input style='width:100%; border:solid 1px green; font-size: 11px;' type='text' name='dueDate' onkeyup='auto_date_format(event, this); onlyNumHipen(this);' onkeypress='auto_date_format(event, this); onlyNumHipen(this);' maxlength='10' /></td>";
  contents += "<td class='cell4' scope='row'><select style='width:100%; border:solid 1px green; font-size: 11px;' name='type'>";
  contents += '<option value=""></option>';
  contents += '<option value="매입채무">매입채무</option>';
  contents += '<option value="매출채권">매출채권</option>';
  contents += '<option value="운영비용">운영비용</option>';
  contents += '</select></td>';
  contents += "<td class='cell5' scope='row'><select name='bankType' style='width:100%; text-align:left; border:solid 1px green; font-size: 11px;'>";
  contents += "<option value='' selected></option>";
  contents += bankTypeHidden;
  contents += "</select></td>";
  contents += "<td class='cell6' scope='row'><input style='width:100%; border:solid 1px green; font-size: 11px;' type='text' name='customer' /></td>";
  contents += "<td class='cell7' scope='row'><input style='width:100%; border:solid 1px green; font-size: 11px;' type='text' name='endUser' /></td>";
  contents += "<td class='cell8' scope='row'><input style='width:100%; border:solid 1px green; font-size: 11px;' type='text' name='breakdown' /></td>";
  contents += "<td class='cell9' scope='row'><input style='width:100%; border:solid 1px green; font-size: 11px;' type='text' name='requisition' onFocus='deCommaStr(this);' onBlur='this.value = commaStr(this.value);' onkeyup='onlyNumber(this)'/></td>";
  contents += "<td class='cell10' scope='row'><input style='width:100%; border:solid 1px green; font-size: 11px;' type='text' name='deposit' class='deposit' onchange='calcBalance(this)' onFocus='deCommaStr(this);' onBlur='this.value = commaStr(this.value);' onkeyup='onlyNumber(this)'/></td>";
  contents += "<td class='cell11' scope='row'><input style='width:100%; border:solid 1px green; font-size: 11px;' type='text' name='withdraw' class='withdraw' onchange='calcBalance(this)' onFocus='deCommaStr(this);' onBlur='this.value = commaStr(this.value);' onkeyup='onlyNumber(this)'/></td>";
  contents += "<td class='cell12' scope='row'><input style='width:100%; border:solid 1px green; font-size: 11px;' type='text' name='balance' class='balance'  onFocus='deCommaStr(this);' onBlur='this.value = commaStr(this.value);' readonly/></td>";
  contents += "<td class='cell13' scope='row'><input style='width:100%; border:solid 1px green; font-size: 11px;' type='text' name='balance2'  onFocus='deCommaStr(this);' onBlur='this.value = commaStr(this.value);' readonly/></td>";
  contents += '<td><input type="button" name="delRow" class="delRow" value=" X " /></td>';
  contents += '</tr>';

  $('#AddOption').append(contents); // 추가기능
  $('.table-box').scrollTop($('.table-box')[0].scrollHeight);

  $('.delRow').click(function() { // 삭제기능
    $(this).parent().parent().remove();
  });

  MoveTable('AddOption');
});

// 내용 수정 시 헹 저장
var updateArr = [];
var updateRow = 0;

// 수정 시 배열에 index 입력
function modifyInput(obj) {
  obj.style.backgroundColor = "#F08080";
  updateArr.push(Number(obj.closest('tr').getAttribute('name')));
  console.log(updateArr);
}

// 모달창 수정 인덱스 저장
var setBankbookUpdate = new Set();
var setBankbookSaveUpdate = new Set();
var setBankbookDepositUpdate = new Set();
var setBankbookLoanUpdate = new Set();
var bankbookUpdate =[];
var bankbookSaveUpdate =[];
var bankbookDepositUpdate =[];
var bankbookLoanUpdate =[];
var updateModalRow = 0;

function modifyModalInput(obj) {
  obj.style.backgroundColor = "#F08080";
  console.log(obj.closest('tr').rowIndex -1);
  console.log(obj.closest('tr').getAttribute('class'));

  if(obj.closest('tr').getAttribute('class') == 'modal_select_row'){
    // bankbookUpdate.push(obj.closest('tr').rowIndex -1);
    setBankbookUpdate.add(obj.closest('tr').rowIndex -1);
    bankbookUpdate = Array.from(setBankbookUpdate);
    console.log(setBankbookUpdate);
    console.log(bankbookUpdate);
  }else if (obj.closest('tr').getAttribute('class') == 'modal_select_Save_row') {
    // bankbookSaveUpdate.push(obj.closest('tr').rowIndex -1);
    setBankbookSaveUpdate.add(obj.closest('tr').rowIndex -1);
    bankbookSaveUpdate = Array.from(setBankbookSaveUpdate);
  }else if (obj.closest('tr').getAttribute('class') == 'modal_select_Deposit_row') {
    // bankbookDepositUpdate.push(obj.closest('tr').rowIndex -1);
    setBankbookDepositUpdate.add(obj.closest('tr').rowIndex -1);
    bankbookDepositUpdate = Array.from(setBankbookDepositUpdate);
  }else if (obj.closest('tr').getAttribute('class') == 'modal_select_Loan_row') {
    // bankbookLoanUpdate.push(obj.closest('tr').rowIndex -1);
    setBankbookLoanUpdate.add(obj.closest('tr').rowIndex -1);
    bankbookLoanUpdate = Array.from(setBankbookLoanUpdate);
  }
}

var listLen = $('.row').length; // 저장 버튼 누르기 전 리스트 길이

// 저장 버튼 눌렀을때 동작
$('#update').click(function() {
  var err = [];
  var update = [];
  var checkLen = $('.row').length;

  $.each(updateArr,function(i,value){
    if(update.indexOf(value) == -1 ) update.push(value);
  });

  // 입력 오류 검사
  for (var i = 0; i < checkLen; i++) {
    var type = $(".row select[name='type']").eq(i).val();
    var bankType = $(".row select[name='bankType']").eq(i).val();
    var breakdown = $(".row input[name='breakdown']").eq(i).val();
    var requisition = $(".row input[name='requisition']").eq(i).val().replace(/,/g, '');
    var deposit = $(".row input[name='deposit']").eq(i).val().replace(/,/g, '');
    var withdraw = $(".row input[name='withdraw']").eq(i).val().replace(/,/g, '');
    var dateOfIssue = $(".row input[name=dateOfIssue]").eq(i).val();
    var fixedDate = $(".row input[name=fixedDate]").eq(i).val();
    var dueDate = $(".row input[name=dueDate]").eq(i).val();

    $(".row").eq(i).closest('tr').css('background-color', 'white');
    $(".row").eq(i).children('td').css('background-color', 'white');
    $(".row select[name=type]").eq(i).css('background-color', 'white');

    if (dateOfIssue != ''){
      if (dateOfIssue.length !=10 || dateOfIssue.split('-').length !=3 || validateYear(dateOfIssue) == false || validateMonth(dateOfIssue) ==false || validateDay(dateOfIssue) == false){
        $(".row input[name=dateOfIssue]").eq(i).css('background-color', '#8e8d81');
        err.push(i);
      } else {
        $(".row input[name=dateOfIssue]").eq(i).css('background-color', 'white');
      }
    }

    if (fixedDate != ''){
      if (fixedDate.length !=10 || fixedDate.split('-').length !=3 || validateYear(fixedDate) == false || validateMonth(fixedDate) ==false || validateDay(fixedDate) == false){
        $(".row input[name=fixedDate]").eq(i).css('background-color', '#8e8d81');
        err.push(i);
      } else {
        $(".row input[name=fixedDate]").eq(i).css('background-color', 'white');
      }
    }

    if (dueDate != ''){
      if (dueDate.length !=10 || dueDate.split('-').length !=3 || validateYear(dueDate) == false || validateMonth(dueDate) ==false || validateDay(dueDate) == false){
        $(".row input[name=dueDate]").eq(i).css('background-color', '#8e8d81');
        err.push(i);
      } else {
        $(".row input[name=dueDate]").eq(i).css('background-color', 'white');
      }
    }

    if (type == "매출채권" && deposit == '') {
      $(".row select[name=type]").eq(i).css('background-color', 'pink');
      $(".row input[name=deposit]").eq(i).closest('td').css('background-color', 'pink');
      err.push(i);
      if (requisition != '' && deposit == '' && withdraw == '') {
        err.pop();
        $(".row select[name=type]").eq(i).css('background-color', 'white');
        $(".row input[name=deposit]").eq(i).closest('td').css('background-color', 'white');
      }
    }

    if (type == "매입채무" && withdraw == '') {
      $(".row select[name=type]").eq(i).css('background-color', 'pink');
      $(".row input[name=withdraw]").eq(i).closest('td').css('background-color', 'pink');
      err.push(i);
      //console.log(err);
      if (requisition != '' && deposit == '' && withdraw == '') {
        //console.log(deposit);
        err.pop();
        $(".row select[name=type]").eq(i).css('background-color', 'white');
        $(".row input[name=withdraw]").eq(i).closest('td').css('background-color', 'white');
      }
    }

    if (breakdown != '기초' && requisition == '' && deposit == '' && withdraw == '') {
      $(".row input[name=requisition]").eq(i).closest('td').css('background-color', 'black');
      $(".row input[name=deposit]").eq(i).closest('td').css('background-color', 'black');
      $(".row input[name=withdraw]").eq(i).closest('td').css('background-color', 'black');
      err.push(i);
    } else {
      $(this).eq(i).closest('tr').css('background-color', 'white');
    }
// banktype에 없는 값 입력 시 오류
    if (bankType != '' && $.inArray(bankType,bankTypeArr)<0) {
      console.log(bankType);
      console.log(bankTypeArr);
      $(".row select[name=bankType]").eq(i).css('background-color', '#77cef9');
      err.push(i);
    } else {
      $(".row select[name=bankType]").eq(i).css('background-color', 'white');
    }
  }
  var errRow = [];
  $.each(err, function(i, el) {
    if ($.inArray(el, errRow) === -1) errRow.push(el);
  });
  var errLen = errRow.length;

  if (errLen > 0) {
    alert(errLen + "행의 데이터 입력이 잘 못 되었습니다.");
    stopPropagation();
  }

  var result = 'true';
  // 저장 버튼 누른 후 길이 (새로운 입력이 있는지 확인 용)
  var newListLen = $('.row').length;

  // 수정 추가 모두 없을 때
  if (listLen == newListLen && update.length == 0) {
    alert("수정 사항이 없습니다.");
    stopPropagation();
  }

  // 리스트 추가가 있을 경우
  if (listLen < newListLen) {
    for (var i = listLen; i < newListLen; i++) {
      var dateOfIssue = $(".row input[name='dateOfIssue']").eq(i).val();
      var fixedDate = $(".row input[name='fixedDate']").eq(i).val();
      var dueDate = $(".row input[name='dueDate']").eq(i).val();
      var type = $(".row select[name='type']").eq(i).val();
      var bankType = $(".row select[name='bankType']").eq(i).val();
      var customer = $(".row input[name='customer']").eq(i).val();
      var endUser = $(".row input[name='endUser']").eq(i).val();
      var breakdown = $(".row input[name='breakdown']").eq(i).val();
      var requisition = $(".row input[name='requisition']").eq(i).val().replace(/,/g, '');
      var deposit = $(".row input[name='deposit']").eq(i).val().replace(/,/g, '');
      var withdraw = $(".row input[name='withdraw']").eq(i).val().replace(/,/g, '');

      if (dateOfIssue != '' && fixedDate == '' && dueDate == '') {
        var fixedDate = dateAdd(dateOfIssue);
        var dueDate = dateAdd(fixedDate);
      }

      $.ajax({
        type: "POST",
        url: "/index.php/fundreporting/insert?company=" + getParam("company"),
        dataType: "json",
        async: false,
        data: {
          dateOfIssue: dateOfIssue,
          fixedDate: fixedDate,
          dueDate: dueDate,
          type: type,
          bankType: bankType,
          customer: customer,
          endUser: endUser,
          breakdown: breakdown,
          requisition: requisition,
          deposit: deposit,
          withdraw: withdraw
        },
        success: function(data) {
          if (data == 'false') {
            //console.log(data);
            result = 'false';
          }
        }
      });
    }
  }

  // 수정이 있을 경우
  if (update.length > 0) {
    for (var i = 0; i < update.length; i++) {
      var idx = $(".row input[name='idx']").eq(update[i]).val();
      var dateOfIssue = $(".row input[name='dateOfIssue']").eq(update[i]).val();
      var fixedDate = $(".row input[name='fixedDate']").eq(update[i]).val();
      var dueDate = $(".row input[name='dueDate']").eq(update[i]).val();
      var type = $(".row select[name='type']").eq(update[i]).val();
      var bankType = $(".row select[name='bankType']").eq(update[i]).val();
      var customer = $(".row input[name='customer']").eq(update[i]).val();
      var endUser = $(".row input[name='endUser']").eq(update[i]).val();
      var breakdown = $(".row input[name='breakdown']").eq(update[i]).val();
      var requisition = $(".row input[name='requisition']").eq(update[i]).val().replace(/,/g, '');
      var deposit = $(".row input[name='deposit']").eq(update[i]).val().replace(/,/g, '');
      var withdraw = $(".row input[name='withdraw']").eq(update[i]).val().replace(/,/g, '');

      if (dateOfIssue != '' && fixedDate == '' && dueDate == '') {
        var fixedDate = dateAdd(dateOfIssue);
        var dueDate = dateAdd(fixedDate);
      }

      var result = "";
      $.ajax({
        type: "POST",
        // cache:false,
        url: "/index.php/fundreporting/update?company=" + getParam("company"),
        dataType: "json",
        async: false,
        data: {
          idx: idx,
          dateOfIssue: dateOfIssue,
          fixedDate: fixedDate,
          dueDate: dueDate,
          type: type,
          bankType: bankType,
          customer: customer,
          endUser: endUser,
          breakdown: breakdown,
          requisition: requisition,
          deposit: deposit,
          withdraw: withdraw
        },
        success: function(data) {
          if (data == 'false') {
            //console.log(data);
            result = 'false';
          }
        }
      });
    }
  }
  if (result = 'true') {
    alert('저장을 성공하였습니다.');
    window.location.reload();
  } else {
    alert('저장을 실패하였습니다.');
    window.location.reload();
  }
});

// 체크 박스 선택 시 색 수정
$('input:checkbox[name=delRow]').change(function() {
  if (this.checked == true) {
    $(this).closest('tr').css('background-color', 'orange');
    $(this).closest('tr').children('td').children('input').css('background-color', 'orange');
    $(this).closest('tr').children('td').children('input').css('border-color', 'orange');
    $(this).closest('tr').children('td').children('select').css('background-color', 'orange');
    $(this).closest('tr').children('td').children('select').css('border-color', 'orange');

  } else if (this.checked == false) {
    $(this).closest('tr').css('background-color', 'white');
    $(this).closest('tr').children('td').children('input').css('background-color', 'white');
    $(this).closest('tr').children('td').children('input').css('border-color', 'white');
    $(this).closest('tr').children('td').children('select').css('background-color', 'white');
    $(this).closest('tr').children('td').children('select').css('border-color', 'white');
  };
});

//삭제 버튼 눌렀을때 동작
$('#delBtn').click(function() {
  var delList = [];

  $('input:checkbox[name=delRow]').each(function() {
    if (this.checked) {
      var row = $('input:checkbox[name=delRow]').index(this);
      var idx = $('.row input[name=idx]').eq(row).val();
      delList.push(idx);
    }
  });
  if (delList.length == 0) {
    alert('삭제할 항목을 선택하세요.');
  } else {
    if (confirm('선택한 ' + delList.length + '개 항목을 삭제하시겠습니까?') == true) {
      for (var i = 0; i < delList.length; i++) {
        var delIdx = delList[i];

        $.ajax({
          type: 'POST',
          url: "/index.php/fundreporting/delete?company=" + getParam("company"),
          datatype: 'json',
          data: {
            data: delIdx
          },
          success: function(data) {
            //console.log(data);
          },
          error: function(jqXHR, textStatus, errorThrown) {
            if (jqXHR.statusText = "Internal Server Error") {
              alert(delList[i] + '행 데이터 삭제 실패했습니다.');
            }
          }
        });
      }
      alert('선택한 ' + delList.length + '개 내용이 삭제되었습니다.');
      window.location.reload();
    } else {
      return;
    };
  };
});

// 금액 부분 콤마 추가
function commaStr(n) {
  var reg = /(^[+-]?\d+)(\d{3})/;
  n += "";

  while (reg.test(n))
    n = n.replace(reg, "$1" + "," + "$2");
  return n;
}

// 금액 부분 콤마 제거
function deCommaStr(obj) {
  num = obj.value + "";
  if (obj.value != "") {
    obj.value = obj.value.replace(/,/g, "");
  }
}

$(document).ready(function() {
  MoveTable('AddOption');
});

function MoveTable(id) {
  if (id.indexOf("#") == -1) {
    id = "#" + id;
  }
  $(id).find("input:text").keyup(function(e) {
    var ths = $(this);
    tblMoveCmn(e.keyCode, ths);
  });
}

/*37: ←, 38: ↑, 39: →, 40: ↓ */
function tblMoveCmn(key, ths) {
  var tName = $(ths).prop("tagName").toLowerCase();
  if (key == 37) {
    leftFsCmn(ths);
  }
  if (key == 38 && tName.indexOf("select") == -1) {
    upFsCmn(ths);
  }
  if (key == 39) {
    rightFsCmn(ths);
  }
  if (key == 40 && tName.indexOf("select") == -1) {
    downFsCmn(ths);

  }
}

/*왼쪽으로 이동*/
// function leftFsCmn(ths) {
//   var tdObj = ths.parents("td").eq(0);
//   if (tdObj.prev().children("input[type=text]").length > 0) {
//     tdObj.prev().children("input[type=text]").eq(0).select();
//     return;
//   }
// }

/*오른쪽으로 이동*/
// function rightFsCmn(ths) {
//   var tdObj = ths.parents("td").eq(0);
//   if (tdObj.next().children("input[type=text]").length > 0) {
//     tdObj.next().children("input[type=text]").eq(0).select();
//     return;
//   }
// }

/*위로 이동*/
// function upFsCmn(ths) {
//   var tdObj = ths.parents("td").eq(0);
//   var tdIdx = tdObj.index();
//   var trObj = tdObj.parents("tr").eq(0);
//   var trIdx = trObj.index();
//   if (trIdx > 0) {
//     var ptdObj = trObj.prev().children("td").eq(tdIdx);
//     if (ptdObj.children("input[type=text]").length > 0) {
//       ptdObj.prev().children("input[type=text]").eq(0).focus();
//       return;
//     }
//   }
// }

/*아래로 이동*/
// function downFsCmn(ths) {
//   var tdObj = ths.parents("td").eq(0);
//   var tdIdx = tdObj.index();
//   var trObj = tdObj.parents("tr").eq(0);
//   var trIdx = Number(trObj.index()) + 1;
//   var ntdObj = trObj.next().children("td").eq(tdIdx);
//   if (ntdObj.children("input[type=text]").length > 0) {
//     ntdObj.prev().children("input[type=text]").eq(0).focus();
//     return;
//
//   }
// }

// $('.row input').focus(function() {
//   this.select();
// });

// 오늘 날짜 구하는 함수
function getTimeStamp() {
  var d = new Date();
  var s = leadingZeros(d.getFullYear(), 4) + '-' + leadingZeros(d.getMonth() + 1, 2) + '-' + leadingZeros(d.getDate(), 2);
  return s;
}

function leadingZeros(n, digits) {
  var zero = '';
  n = n.toString();
  if (n.length < digits) {
    for (i = 0; i < digits - n.length; i++)
      zero += '0';
  }
  return zero + n;
}

// 날짜 30일 뒤 함수
function dateAdd(beforeDate) {
  var yy = parseInt(beforeDate.substr(0, 4), 10);
  var mm = parseInt(beforeDate.substr(5, 2), 10);
  var dd = parseInt(beforeDate.substr(8), 10);

  d = new Date(yy, mm - 1, dd + 30);

  yy = d.getFullYear(); // 19를 2019로 변경
  mm = d.getMonth() + 1;
  mm = (mm < 10) ? '0' + mm : mm; //월 변경  +1 하는 이유는 자바스크립트에서 0이 1월이라
  dd = d.getDate();
  dd = (dd < 10) ? '0' + dd : dd; //10일 이전이면 숫자 자릿수 맞추기 위함

  return '' + yy + '-' + mm + '-' + dd;
}

// 엑셀 파일 저장

function ReportToExcelConverter() {
  var today = getTimeStamp();
  $("#accountlist tr[class=bankTypeHidden]").remove();
  $("#accountlist").table2excel({
    exclude: ".noExl", // excel 파일에 저장 시 제외할 부분
    name: "Excel Document Name",
    filename: "자금보고서 " + today + '.xls', //확장자를 여기서 붙여줘야한다.
    fileext: ".xls",
    exclude_img: true,
    exclude_links: true,
    exclude_inputs: true
  });
};

// 입금, 출금 수정시 잔액 변경
function calcBalance() {
  var num = $(".row").length - 1;
  var balance = $('#saveBalance').val();

  for (var i = 0; i < num + 1; i++) {
    var deposit = $(".row input[name='deposit']").eq(i).val();
    var withdraw = $(".row input[name='withdraw']").eq(i).val();
    if (deposit == '') {
      var deposit = 0;
    } else {
      var deposit = deposit.replace(/,/g, '')
    }
    if (withdraw == '') {
      var withdraw = 0;
    } else {
      var withdraw = withdraw.replace(/,/g, '')
    }

    balance = Number(balance) + Number(deposit) - Number(withdraw);

    $(".row input[name='balance']").eq(i).val(commaStr(balance));
    $(".row input[name='balance2']").eq(i).val(commaStr(balance));
  }
}

$('#bankBtn').click(function() {
  // $('#bankModal').modal(
  //   {backdrop:'static'}
  // );
  $("#insertType").val('');
  $("#insertBank").val('');
  $("#insertBankType").val('');
  $("#insertAccount").val('');
  $("#insertBreakdown").val('');
  $("#insertBalance").val('');
  $('#selectTbody').children().remove();
  $('.modal_select_div').hide(300);
  $('#foldNBtn').text('보통예금▼');
  $('#selectSaveTbody').children().remove();
  $('.modal_select_Save_div').hide(300);
  $('#foldSBtn').text('예적금▼');
  $('#selectDepositTbody').children().remove();
  $('.modal_select_Deposit_div').hide(300);
  $('#foldDBtn').text('보증금▼');
  $('#selectLoanTbody').children().remove();
  $('.modal_select_Loan_div').hide(300);
  $('#foldLBtn').text('대출▼');
  $('#cssmenu').hide();
  $('#bankModal').bPopup({
    onClose: function() {
      $('#cssmenu').show();
    }
  });
});

$('#modalClose').click(function(){
  $('#bankModal').bPopup().close();
  $('#cssmenu').show();
})

MoveTable('insertTbody');
MoveTable('selectTbody');
MoveTable('selectLoanTbody');
MoveTable('selectSaveTbody');
MoveTable('selectDepositTbody');

$("#insertBank").change( function() {
  var val = $(this).val();
  if (val == '새마을은행') {
    val = '새마을-';
  } else if (val =='') {
    val == '';
  } else {
    val = val.substring(0,2)+'-';
  }
  $('.modal-body input[name=insertBankType]').val(val);
});



$("#insertType").change(function(){
  var type = $(this).val();
  if(type=='보통예금'){
    $('#insertBalance').hide();
  } else {
    $('#insertBalance').show();
  }
})

//은행등록
$('.modal_insert_row button[name=modalSaveBtn]').click(function(){
  //alert(1);
  var insertType = $('.modal-body select[name=insertType]').val();
  var insertBank = $('.modal-body select[name=insertBank]').val();
  var insertBankType = $('.modal-body input[name=insertBankType]').val().replace(/\s/gi, "");
  var insertAccount = $('.modal-body input[name=insertAccount]').val().replace(/\s/gi, ""); //숫자만 입력 가능하게 맨 상단줄 수정함
  var insertBreakdown = $('.modal-body input[name=insertBreakdown]').val();
  var insertBalance = $('.modal-body input[name=insertBalance]').val().replace(/,/g, '');
  console.log(insertBalance);
  //공백제거 .replace(/\s/gi, "")
  if (insertBank == null) {
    console.log('null값이다');
  } else if (insertBank != null && insertType == '') {
    console.log('공란이다');
  } else {
    console.log('값이 들어있다');
  }
  console.log('insertType= ' + insertType);
  console.log('insertBank= ' + insertBank);
  console.log('insertBankType= ' + insertBankType);
  console.log('insertAccount= ' + insertAccount);
  console.log('insertBreakdown= '+ insertBreakdown);
  console.log('insertBalance= ' + insertBalance);
  console.log('bankbookUpdate= ' + bankbookUpdate.length);

  console.log('은행 등록');
  if (insertBalance == '') {
    insertBalance == '0';
  }
  if(insertType != '보증금'){
    if (insertType != '' && insertBank != '' && insertBankType != '' && insertAccount != '') {
      $.ajax({
        type: 'POST',
        url: '/index.php/fundreporting/insertbankbook?company=' + getParam("company"),
        datatype: 'json',
        data: {
          insertType: insertType,
          insertBank: insertBank,
          insertBankType: insertBankType,
          insertAccount: insertAccount,
          insertBreakdown:insertBreakdown,
          insertBalance: insertBalance
        },
        success: function(data) {
          if (data == 'false') {
            result = 'false';
          }

        }
      });
    } else {
      alert('등록할 은행정보를 입력해주세요.');
    };
    if (result = 'true') {
      alert('은행정보가 등록되었습니다.');
      window.location.reload();
    } else {
      alert('은행정보 등록에 실패했습니다.');
      // window.location.reload();
    }
  }else if(insertType == '보증금'){
    if(insertBreakdown != ''){
      $.ajax({
        type: 'POST',
        url: '/index.php/fundreporting/insertbankbook?company=' + getParam("company"),
        datatype: 'json',
        data: {
          insertType: insertType,
          insertBank: insertBank,
          insertBankType: insertBankType,
          insertAccount: insertAccount,
          insertBreakdown:insertBreakdown,
          insertBalance: insertBalance
        },
        success: function(data) {
          if (data == 'false') {
            result = 'false';
        }
        },
      });
    }else{
      alert('등록할 내역과 금액을 입력해주세요.');
    }
    if (result = 'true') {
      alert('은행정보가 등록되었습니다.');
      window.location.reload();
    } else {
      alert('보증금 은행정보 등록에 실패했습니다.');
      // window.location.reload();
    }
  }
});


// 은행수정

// 은행수정

$('.modal-footer button[name=modalChangeBtn]').click(function() {

  console.log('은행 수정');
  console.log(bankbookUpdate);
  console.log(bankbookLoanUpdate);
  var countModify =0;
  var arrModify = [];

  if (bankbookUpdate.length > 0 || bankbookLoanUpdate.length > 0 || bankbookSaveUpdate.length >0 || bankbookDepositUpdate.length >0) {

    for (var i = 0; i < bankbookUpdate.length; i++) {
      var updateIdx = $(".modal_select_row input[name='selectIdx']").eq(bankbookUpdate[i]).val().replace(/\s/gi, "");
      var updateType = $(".modal_select_row select[name='selectType']").eq(bankbookUpdate[i]).val();
      var updateBank = $(".modal_select_row select[name='selectBank']").eq(bankbookUpdate[i]).val();
      var updateBankType = $(".modal_select_row input[name='selectBankType']").eq(bankbookUpdate[i]).val().replace(/\s/gi, "");
      var updateAccount = $(".modal_select_row input[name='selectAccount']").eq(bankbookUpdate[i]).val().replace(/\s/gi, "");
      var updateBreakdown = $(".modal_select_row input[name='selectBreakdown']").eq(bankbookUpdate[i]).val();
      var updateBalance = $(".modal_select_row input[name='selectBalance']").eq(bankbookUpdate[i]).val();

      updateBalance = replace(updateBalance);

      // deposit.replace(/,/g, '');
      // alert(updateBalance);
      console.log(updateIdx);
      console.log(updateType);
      console.log(updateBank);
      console.log(updateBankType);
      console.log(updateAccount);
      console.log(updateBreakdown);
      console.log(updateBalance);

      $.ajax({
        type: "POST",
        url: "/index.php/fundreporting/updatebankbook?company=" + getParam("company"),
        dataType: "json",
        data: {
          updateIdx: updateIdx,
          updateType: updateType,
          updateBank: updateBank,
          updateBankType: updateBankType,
          updateAccount: updateAccount,
          updateBreakdown: updateBreakdown,
          updateBalance: updateBalance
        },
        success: function(data) {
          if (data == 'false') {
            result = 'false';
            arrModify.push(data);
          }else{
            arrModify.push(data);
            countModify = countModify+1;
          }
        }
      });
    };

    for (var i = 0; i < bankbookLoanUpdate.length; i++) {
      var updateLoanIdx = $(".modal_select_Loan_row input[name='selectLoanIdx']").eq(bankbookLoanUpdate[i]).val().replace(/\s/gi, "");
      var updateLoanType = $(".modal_select_Loan_row select[name='selectLoanType']").eq(bankbookLoanUpdate[i]).val();
      var updateLoanBank = $(".modal_select_Loan_row select[name='selectLoanBank']").eq(bankbookLoanUpdate[i]).val();
      var updateLoanBankType = $(".modal_select_Loan_row input[name='selectLoanBankType']").eq(bankbookLoanUpdate[i]).val().replace(/\s/gi, "");
      var updateLoanAccount = $(".modal_select_Loan_row input[name='selectLoanAccount']").eq(bankbookLoanUpdate[i]).val().replace(/\s/gi, "");
      var updateLoanBreakdown = $(".modal_select_Loan_row input[name='selectLoanBreakdown']").eq(bankbookLoanUpdate[i]).val();
      var updateLoanBalance = $(".modal_select_Loan_row input[name='selectLoanBalance']").eq(bankbookLoanUpdate[i]).val();

      updateLoanBalance = replace(updateLoanBalance);

      // deposit.replace(/,/g, '');
      // alert(updateBalance);
      console.log(updateLoanIdx);
      console.log(updateLoanType);
      console.log(updateLoanBank);
      console.log(updateLoanBankType);
      console.log(updateLoanAccount);
      console.log(updateLoanBreakdown);
      console.log(updateLoanBalance);

      $.ajax({
        type: "POST",
        url: "/index.php/fundreporting/updatebankbook?company=" + getParam("company"),
        dataType: "json",
        data: {
          updateIdx: updateLoanIdx,
          updateType: updateLoanType,
          updateBank: updateLoanBank,
          updateBankType: updateLoanBankType,
          updateAccount: updateLoanAccount,
          updateBreakdown:updateLoanBreakdown,
          updateBalance: updateLoanBalance
        },
        success: function(data) {
          if (data == 'false') {
            result = 'false';
            arrModify.push(data);
          }else{
            arrModify.push(data);
            countModify = countModify+1;
          }
        }
      });
    };

    for (var i = 0; i < bankbookSaveUpdate.length; i++) {
      var updateSaveIdx = $(".modal_select_Save_row input[name='selectSaveIdx']").eq(bankbookSaveUpdate[i]).val().replace(/\s/gi, "");
      var updateSaveType = $(".modal_select_Save_row select[name='selectSaveType']").eq(bankbookSaveUpdate[i]).val();
      var updateSaveBank = $(".modal_select_Save_row select[name='selectSaveBank']").eq(bankbookSaveUpdate[i]).val();
      var updateSaveBankType = $(".modal_select_Save_row input[name='selectSaveBankType']").eq(bankbookSaveUpdate[i]).val().replace(/\s/gi, "");
      var updateSaveAccount = $(".modal_select_Save_row input[name='selectSaveAccount']").eq(bankbookSaveUpdate[i]).val().replace(/\s/gi, "");
      var updateSaveBreakdown = $(".modal_select_Save_row input[name='selectSaveBreakdown']").eq(bankbookSaveUpdate[i]).val();
      var updateSaveBalance = $(".modal_select_Save_row input[name='selectSaveBalance']").eq(bankbookSaveUpdate[i]).val();

      updateSaveBalance = replace(updateSaveBalance);

      // deposit.replace(/,/g, '');
      // alert(updateBalance);
      console.log(updateSaveIdx);
      console.log(updateSaveIdx);
      console.log(updateSaveBank);
      console.log(updateSaveBankType);
      console.log(updateSaveAccount);
      console.log(updateSaveBreakdown);
      console.log(updateSaveBalance);

      $.ajax({
        type: "POST",
        url: "/index.php/fundreporting/updatebankbook?company=" + getParam("company"),
        dataType: "json",
        data: {
          updateIdx: updateSaveIdx,
          updateType: updateSaveType,
          updateBank: updateSaveBank,
          updateBankType: updateSaveBankType,
          updateAccount: updateSaveAccount,
          updateBreakdown:updateSaveBreakdown,
          updateBalance: updateSaveBalance
        },
        success: function(data) {
          console.log(data);
          if (data == 'false') {
            result = 'false';
            arrModify.push(data);
          }else{
            arrModify.push(data);
            countModify = countModify+1;
          }
        }
      });
    };

    for (var i = 0; i < bankbookDepositUpdate.length; i++) {
      var updateDepositIdx = $(".modal_select_Deposit_row input[name='selectDepositIdx']").eq(bankbookDepositUpdate[i]).val().replace(/\s/gi, "");
      var updateDepositType = $(".modal_select_Deposit_row select[name='selectDepositType']").eq(bankbookDepositUpdate[i]).val();
      var updateDepositBank = $(".modal_select_Deposit_row select[name='selectDepositBank']").eq(bankbookDepositUpdate[i]).val();
      var updateDepositBankType = $(".modal_select_Deposit_row input[name='selectDepositBankType']").eq(bankbookDepositUpdate[i]).val().replace(/\s/gi, "");
      var updateDepositAccount = $(".modal_select_Deposit_row input[name='selectDepositAccount']").eq(bankbookDepositUpdate[i]).val().replace(/\s/gi, "");
      var updateDepositBreakdown = $(".modal_select_Deposit_row input[name='selectDepositBreakdown']").eq(bankbookDepositUpdate[i]).val();
      var updateDepositBalance = $(".modal_select_Deposit_row input[name='selectDepositBalance']").eq(bankbookDepositUpdate[i]).val();

      updateDepositBalance = replace(updateDepositBalance);

      // deposit.replace(/,/g, '');
      // alert(updateBalance);
      console.log(updateDepositIdx);
      console.log(updateDepositIdx);
      console.log(updateDepositBank);
      console.log(updateDepositBankType);
      console.log(updateDepositAccount);
      console.log(updateDepositBreakdown);
      console.log(updateDepositBalance);

      $.ajax({
        type: "POST",
        url: "/index.php/fundreporting/updatebankbook?company=" + getParam("company"),
        dataType: "json",
        data: {
          updateIdx: updateDepositIdx,
          updateType: updateDepositType,
          updateBank: updateDepositBank,
          updateBankType: updateDepositBankType,
          updateAccount: updateDepositAccount,
          updateBreakdown:updateDepositBreakdown,
          updateBalance: updateDepositBalance
        },
        success: function(data) {
          if (data == 'false') {
            result = 'false';
            arrModify.push(data);
          }else{
            arrModify.push(data);
            countModify = countModify+1;
          }
        }
      });
    };

    $(document).ajaxStop(function () {
      console.log('수정 개수= '+ countModify);
      console.log('수정 bool값= '+arrModify)
      if(countModify>0){
        var countTrue = 0;
        for(i=0;i<arrModify.length;i++){
          if(arrModify[i] == 'true'){
            countTrue = countTrue+1;
          }
        }
        console.log('수정 bool값 개수로 변환값= '+countTrue);
        if( countTrue == countModify){
          alert('은행정보가 수정되었습니다.');
          countModify = 0;
          window.location.reload();
        }else{
          alert('은행정보 수정에 실패했습니다. 다시 한 번 확인해주세요.');
        };
      };
    });

  } else {
    alert('수정할 은행정보를 입력해주세요.');
  };
});

function delBank(obj){
  // alert('clicked');
  var trClass = obj.closest('tr').getAttribute('class')
  // console.log(obj.closest('tr').getAttribute('class'));
  if(trClass == 'modal_select_row'){
    var delBank = obj.closest('tr').rowIndex -1;
    var idx = $(".modal_select_row input[name='selectIdx']").eq(delBank).val();
    console.log('delBank',delBank);
    console.log('delBankIdx=',idx);
  }else if (trClass == 'modal_select_Save_row') {
    var delSaveBank = obj.closest('tr').rowIndex -1;
    var idx = $(".modal_select_Save_row input[name='selectSaveIdx']").eq(delSaveBank).val();
    console.log('delSaveBank',delSaveBank);
    console.log('delSaveBankIdx=',idx);
  }else if (trClass == 'modal_select_Deposit_row') {
    var delDepositBank = obj.closest('tr').rowIndex -1;
    var idx = $(".modal_select_Deposit_row input[name='selectDepositIdx']").eq(delDepositBank).val();
    console.log('delDepositBank',delDepositBank);
    console.log('delDepositBankIdx=',idx);
  }else if (true) {
    var delLoanBank = obj.closest('tr').rowIndex -1;
    var idx = $(".modal_select_Loan_row input[name='selectLoanIdx']").eq(delLoanBank).val();
    console.log('delLoanBank',delLoanBank);
    console.log('delLoanBankIdx=',idx);
  }

  console.log(idx);

  ///로그내역///
///deluser받아오기///
var delUser_id = $('.hiddenSelectBanklist input[name=delUser_id]').val();
// alert(delUser_id);
///로그내역///


  if (confirm('해당 은행정보를 정말로 삭제하시겠습니까?') == true) {
    var delajax = $.ajax({
      type: 'POST',
      url: '/index.php/fundreporting/deletebankbook',
      datatype: 'json',
      data: {
        delBankIdx: idx
      },
      success: function(data) {
        if (data == 'false') {
          //console.log(data);
          result = 'false';
        }
      }
    });
    ///로그내역///
      ///deluser받아오기///
       // alert('로그시작'+delUser_id+','+idx);

      $.when(delajax).done(function(){
        $.ajax({
          type: 'POST',
          url: '/index.php/fundreporting/deluser',
          // asyn:'false',
          datatype: 'json',
          data: {
            delId: delUser_id,
            delIdx: idx
          },
          success: function(data) {
            console.log(data);
            // alert('삭제로그.'+data);
          }
        });
      });
        ///로그내역///
  } else {
    return;
  };
    if (result = 'true') {
      alert('은행정보가 삭제되었습니다.');
      window.location.reload();
    } else {
      alert('은행정보 삭제에 실패했습니다.');
      // window.location.reload();
    }
};

$('#foldBtn').click(function() {
  if ($('#foldBtn').text() == '은행정보▼') {
    // document.all.foldTarget.style.display="block"; //동작은 하나 시간 조절이 블가
    for (var i=0; i<$('.hiddenBankBookType').length; i++){
      if($('.hiddenBankBookType input[name=accountType]').eq(i).val() == '보통예금'){
        var bankContents = '';
        bankContents += '<tr class="bankBookList">';
        bankContents += '<td scope="row" class="line" name="accountType" style="text-align:left;">'+$('.hiddenBankBookType input[name=accountType]').eq(i).val()+'</td>';
        bankContents += '<td scope="row" class="line" name="bank" style="text-align:left;">'+$('.hiddenBankBookType input[name=bank]').eq(i).val()+'</td>';
        bankContents += '<td scope="row" class="line" name="bankType" style="text-align:left;">'+$('.hiddenBankBookType input[name=bankType]').eq(i).val()+'</td>';
        bankContents += '<td scope="row" class="line" style="width:300px; text-align:left;" name="account">'+$('.hiddenBankBookType input[name=account]').eq(i).val()+'</td>';
        bankContents += '<td scope="row" class="line" name="breakdown" style="text-align:left;">'+$('.hiddenBankBookType input[name=breakdown]').eq(i).val()+'</td>';
        bankContents += '<td scope="row" class="line" name="yesbalance" style="text-align:right;">'+$('.hiddenBankBookType input[name=yesbalance]').eq(i).val()+'</td>';
        bankContents += '<td scope="row" class="line" name="todaydeposit" style="text-align:right;">'+$('.hiddenBankBookType input[name=todaydeposit]').eq(i).val()+'</td>';
        bankContents += '<td scope="row" class="line" name="todaywithdraw" style="text-align:right;">'+$('.hiddenBankBookType input[name=todaywithdraw]').eq(i).val()+'</td>';
        bankContents += '<td scope="row" class="line" name="bankBalance" style="text-align:right;">'+$('.hiddenBankBookType input[name=balance]').eq(i).val()+'</td>';
        bankContents += '<td scope="row" class="line" name="bankBalance2" style="text-align:right;">'+$('.hiddenBankBookType input[name=balance2]').eq(i).val()+'</td>';
        bankContents += '</tr>';
        $('#bankAdd').append(bankContents); // 추가기능
      }else if($('.hiddenBankBookType input[name=accountType]').eq(i).val() == '예적금'){
        var bankContents = '';
        bankContents += '<tr class="saveBankBookList">';
        bankContents += '<td scope="row" class="line" name="saveAccountType" style="text-align:left;">'+$('.hiddenBankBookType input[name=accountType]').eq(i).val()+'</td>';
        bankContents += '<td scope="row" class="line" name="saveBank" style="text-align:left;">'+$('.hiddenBankBookType input[name=bank]').eq(i).val()+'</td>';
        bankContents += '<td scope="row" class="line" name="saveBankType" style="text-align:left;">'+$('.hiddenBankBookType input[name=bankType]').eq(i).val()+'</td>';
        bankContents += '<td scope="row" class="line" style="width:300px; text-align:left;" name="saveAccount">'+$('.hiddenBankBookType input[name=account]').eq(i).val()+'</td>';
        bankContents += '<td scope="row" class="line" name="saveBreakdown" style="text-align:left;">'+$('.hiddenBankBookType input[name=breakdown]').eq(i).val()+'</td>';
        bankContents += '<td scope="row" class="line" name="saveYesBalance" style="text-align:right;">'+$('.hiddenBankBookType input[name=yesbalance]').eq(i).val()+'</td>';
        bankContents += '<td scope="row" class="line" name="saveTodayDeposit" style="text-align:right;">'+$('.hiddenBankBookType input[name=todaydeposit]').eq(i).val()+'</td>';
        bankContents += '<td scope="row" class="line" name="saveTodayWithdraw" style="text-align:right;">'+$('.hiddenBankBookType input[name=todaywithdraw]').eq(i).val()+'</td>';
        bankContents += '<td scope="row" class="line" name="saveBankBalance" style="text-align:right;">'+$('.hiddenBankBookType input[name=balance]').eq(i).val()+'</td>';
        bankContents += '<td scope="row" class="line" name="saveBankBalance2" style="text-align:right;">'+$('.hiddenBankBookType input[name=balance2]').eq(i).val()+'</td>';
        bankContents += '</tr>';
        $('#saveBankAdd').append(bankContents); // 추가기능
      }else if($('.hiddenBankBookType input[name=accountType]').eq(i).val() == '보증금'){
        var bankContents = '';
        bankContents += '<tr class="depositBankBookList">';
        bankContents += '<td scope="row" class="line" name="depositAccountType" style="text-align:left;">'+$('.hiddenBankBookType input[name=accountType]').eq(i).val()+'</td>';
        bankContents += '<td scope="row" class="line" name="depositBank" style="text-align:left;">'+$('.hiddenBankBookType input[name=bank]').eq(i).val()+'</td>';
        bankContents += '<td scope="row" class="line" name="depositBankType" style="text-align:left;">'+$('.hiddenBankBookType input[name=bankType]').eq(i).val()+'</td>';
        bankContents += '<td scope="row" class="line" style="width:300px; text-align:left;" name="depositAccount">'+$('.hiddenBankBookType input[name=account]').eq(i).val()+'</td>';
        bankContents += '<td scope="row" class="line" name="depositBreakdown" style="text-align:left;">'+$('.hiddenBankBookType input[name=breakdown]').eq(i).val()+'</td>';
        bankContents += '<td scope="row" class="line" name="depositYesBalance" style="text-align:right;">'+$('.hiddenBankBookType input[name=yesbalance]').eq(i).val()+'</td>';
        bankContents += '<td scope="row" class="line" name="depositTodayDeposit" style="text-align:right;">'+$('.hiddenBankBookType input[name=todaydeposit]').eq(i).val()+'</td>';
        bankContents += '<td scope="row" class="line" name="depositTodayWithdraw" style="text-align:right;">'+$('.hiddenBankBookType input[name=todaywithdraw]').eq(i).val()+'</td>';
        bankContents += '<td scope="row" class="line" name="depositBankBalance" style="text-align:right;">'+$('.hiddenBankBookType input[name=balance]').eq(i).val()+'</td>';
        bankContents += '<td scope="row" class="line" name="depositBankBalance2" style="text-align:right;">'+$('.hiddenBankBookType input[name=balance2]').eq(i).val()+'</td>';
        bankContents += '</tr>';
        $('#depositBankAdd').append(bankContents); // 추가기능
      }else if($('.hiddenBankBookType input[name=accountType]').eq(i).val() == '대출'){
        var bankContents = '';
        bankContents += '<tr class="loanBankBookList">';
        bankContents += '<td scope="row" class="line" name="loanAccountType" style="text-align:left;">'+$('.hiddenBankBookType input[name=accountType]').eq(i).val()+'</td>';
        bankContents += '<td scope="row" class="line" name="loanBank" style="text-align:left;">'+$('.hiddenBankBookType input[name=bank]').eq(i).val()+'</td>';
        bankContents += '<td scope="row" class="line" name="loanBankType" style="text-align:left;" id="saveBankType">'+$('.hiddenBankBookType input[name=bankType]').eq(i).val()+'</td>';
        bankContents += '<td scope="row" class="line" style="width:300px; text-align:left;" name="loanAccount">'+$('.hiddenBankBookType input[name=account]').eq(i).val()+'</td>';
        bankContents += '<td scope="row" class="line" name="loanBreakdown" style="text-align:left;">'+$('.hiddenBankBookType input[name=breakdown]').eq(i).val()+'</td>';
        bankContents += '<td scope="row" class="line" name="loanYesBalance" style="text-align:right;">'+$('.hiddenBankBookType input[name=yesbalance]').eq(i).val()+'</td>';
        bankContents += '<td scope="row" class="line" name="loanTodayDeposit" style="text-align:right;">'+$('.hiddenBankBookType input[name=todaydeposit]').eq(i).val()+'</td>';
        bankContents += '<td scope="row" class="line" name="loanTodayWithdraw" style="text-align:right;">'+$('.hiddenBankBookType input[name=todaywithdraw]').eq(i).val()+'</td>';
        bankContents += '<td scope="row" class="line" name="loanBankBalance" style="text-align:right;">'+$('.hiddenBankBookType input[name=balance]').eq(i).val()+'</td>';
        bankContents += '<td scope="row" class="line" name="loanBankBalance2" style="text-align:right;">'+$('.hiddenBankBookType input[name=balance2]').eq(i).val()+'</td>';
        bankContents += '</tr>';
        $('#loanBankAdd').append(bankContents); // 추가기능
      }
    }
    $('#foldTarget').show(300);
    $('#foldBtn').text('은행정보▲');
  } else {
    // document.all.foldTarget.style.display="none"; //동작은 하나 시간 조절이 블가능
    $('#bankAdd').children().remove();
    $('#saveBankAdd').children().remove();
    $('#loanBankAdd').children().remove();
    $('#foldTarget').hide(300);
    $('#foldBtn').text('은행정보▼');
  }
});

$('#foldNBtn').click(function() {
  if ($('#foldNBtn').text() == '보통예금▼') {

    // document.all.foldTarget.style.display="block"; //동작은 하나 시간 조절이 블가
    // $('#selectTable').show(300);
    for (var i=0; i<$(".hiddenSelectBanklist").length; i++){
      if($('.hiddenSelectBanklist input[name=type]').eq(i).val() == '보통예금'){
        var banklistContents = '';
        banklistContents += '<tr class="modal_select_row" id="modal_select_row">';
        banklistContents += '<input type="hidden" style="color:red" name="selectIdx" value="'+$('.hiddenSelectBanklist input[name=idx]').eq(i).val()+'" />';
        banklistContents += '<td style="width:10%" scope="row"><select class="input" id="selectType" name="selectType" style="width:100%; border:solid 1px black;" onchange="modifyModalInput(this);">';
        banklistContents += '<option value="보통예금"';
        if($('.hiddenSelectBanklist input[name=type]').eq(i).val()=="보통예금"){banklistContents += 'selected';}
        banklistContents += '>보통예금</option>';
        banklistContents += '<option value="보증금"';
        if($('.hiddenSelectBanklist input[name=type]').eq(i).val()=="보증금"){banklistContents += 'selected';}
        banklistContents += '>보증금</option>';
        banklistContents += '<option value="예적금"';
        if($('.hiddenSelectBanklist input[name=type]').eq(i).val()=="예적금"){banklistContents += 'selected';}
        banklistContents += '>예적금</option>';
        banklistContents += '<option value="대출"';
        if($('.hiddenSelectBanklist input[name=type]').eq(i).val()=="대출"){banklistContents += 'selected';}
        banklistContents += '>대출</option>';
        banklistContents += '</select></td>';

        banklistContents += '<td style="width:10%" scope="row"><select class="input" id="selectBank" name="selectBank" style="width:100%; border:solid 1px black;" onchange="modifyModalInput(this);">';
        banklistContents += '<option value="국민은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="국민은행"){banklistContents += 'selected';}
        banklistContents += '>국민은행</option>';
        banklistContents += '<option value="기업은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="기업은행"){banklistContents += 'selected';}
        banklistContents += '>기업은행</option>';
        banklistContents += '<option value="신한은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="신한은행"){banklistContents += 'selected';}
        banklistContents += '>신한은행</option>';
        banklistContents += '<option value="하나은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="하나은행"){banklistContents += 'selected';}
        banklistContents += '>하나은행</option>';
        banklistContents += '<option value="우리은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="우리은행"){banklistContents += 'selected';}
        banklistContents += '>우리은행</option>';
        banklistContents += '<option value="제일은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="제일은행"){banklistContents += 'selected';}
        banklistContents += '>제일은행</option>';
        banklistContents += '<option value="저축은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="저축은행"){banklistContents += 'selected';}
        banklistContents += '>저축은행</option>';
        banklistContents += '<option value="씨티은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="씨티은행"){banklistContents += 'selected';}
        banklistContents += '>씨티은행</option>';
        banklistContents += '<option value="농협은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="농협은행"){banklistContents += 'selected';}
        banklistContents += '>농협은행</option>';
        banklistContents += '<option value="수협은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="수협은행"){banklistContents += 'selected';}
        banklistContents += '>수협은행</option>';
        banklistContents += '<option value="신협은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="신협은행"){banklistContents += 'selected';}
        banklistContents += '>신협은행</option>';
        banklistContents += '<option value="경남은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="경남은행"){banklistContents += 'selected';}
        banklistContents += '>경남은행</option>';
        banklistContents += '<option value="전북은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="전북은행"){banklistContents += 'selected';}
        banklistContents += '>전북은행</option>';
        banklistContents += '<option value="대구은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="대구은행"){banklistContents += 'selected';}
        banklistContents += '>대구은행</option>';
        banklistContents += '<option value="부산은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="부산은행"){banklistContents += 'selected';}
        banklistContents += '>부산은행</option>';
        banklistContents += '<option value="광주은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="광주은행"){banklistContents += 'selected';}
        banklistContents += '>광주은행</option>';
        banklistContents += '<option value="제주은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="제주은행"){banklistContents += 'selected';}
        banklistContents += '>제주은행</option>';
        banklistContents += '<option value="새마을은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="새마을은행"){banklistContents += 'selected';}
        banklistContents += '>새마을은행</option>';
        banklistContents += '<option value="산업은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="산업은행"){banklistContents += 'selected';}
        banklistContents += '>산업은행</option>';
        banklistContents += "</select></td>";

        banklistContents += '<td style="width:10%" scope="row"><input class="input" style="width:90%;" type="text" name="selectBankType" value="'+$('.hiddenSelectBanklist input[name=banktype]').eq(i).val()+'" onchange="modifyModalInput(this);"/></td></td>';
        banklistContents += '<td style="width:20%" scope="row"><input class="input" style="width:95%; text-align:left;" type="text" name="selectAccount" value="'+$('.hiddenSelectBanklist input[name=account]').eq(i).val()+'" onchange="modifyModalInput(this);" onkeyup="onlyNumHipen(this)" /></td>';
        banklistContents += '<td style="width:25%" scope="row"><input class="input" style="width:95%;" type="text" name="selectBreakdown" value="'+$('.hiddenSelectBanklist input[name=breakdown]').eq(i).val()+'"onchange="modifyModalInput(this);"></td>';
        banklistContents += '<td style="width:20%" scope="row"><input class="input" style="width:95%; text-align:right;" type="text" name="selectBalance"';
        banklistContents += 'value="'+$('.hiddenSelectBanklist input[name=balance]').eq(i).val()+'" onFocus="deCommaStr(this);" onBlur="this.value = commaStr(this.value);" onchange="modifyModalInput(this);" onkeyup="onlyNumber(this)" readonly/></td>';
        banklistContents += '<td style="width:5%"><input type="button" style="width:95%;" id="delBank" class="delBank" onclick="delBank(this)" value=" X "/></td>'
        banklistContents += '</tr>';
        $('#selectTbody').append(banklistContents); // 추가기능
        // console.log(banklistContents);
      }
    };
    $('.modal_select_div').show(300);
    $('#foldNBtn').text('보통예금▲');
  } else {
    // document.all.foldTarget.style.display="none"; //동작은 하나 시간 조절이 블가능
    // $('#selectTable').hide(300);
    $('#selectTbody').children().remove();
    $('.modal_select_div').hide(300);
    $('#foldNBtn').text('보통예금▼');
  }
});

$('#foldSBtn').click(function() {
  if ($('#foldSBtn').text() == '예적금▼') {
    // document.all.foldTarget.style.display="block"; //동작은 하나 시간 조절이 블가
    for (var i=0; i<$(".hiddenSelectBanklist").length; i++){
      if($('.hiddenSelectBanklist input[name=type]').eq(i).val() == '예적금'){
        var banklistContents = '';
        banklistContents += '<tr class="modal_select_Save_row" id="modal_select_Save_row" name="'+$('.hiddenSelectBanklist').eq(i).val()+'">';
        banklistContents += '<input type="hidden" style="color:red" name="selectSaveIdx" value="'+$('.hiddenSelectBanklist input[name=idx]').eq(i).val()+'" />';
        banklistContents += '<td style="width:10%" scope="row"><select class="input" id="selectSaveType" name="selectSaveType" style="width:100%; border:solid 1px black;" onchange="modifyModalInput(this);">';
        banklistContents += '<option value="보통예금"';
        if($('.hiddenSelectBanklist input[name=type]').eq(i).val()=="보통예금"){banklistContents += 'selected';}
        banklistContents += '>보통예금</option>';
        banklistContents += '<option value="보증금"';
        if($('.hiddenSelectBanklist input[name=type]').eq(i).val()=="보증금"){banklistContents += 'selected';}
        banklistContents += '>보증금</option>';
        banklistContents += '<option value="예적금"';
        if($('.hiddenSelectBanklist input[name=type]').eq(i).val()=="예적금"){banklistContents += 'selected';}
        banklistContents += '>예적금</option>';
        banklistContents += '<option value="대출"';
        if($('.hiddenSelectBanklist input[name=type]').eq(i).val()=="대출"){banklistContents += 'selected';}
        banklistContents += '>대출</option>';
        banklistContents += '</select></td>';

        banklistContents += '<td style="width:10%" scope="row"><select class="input" id="selectSaveBank" name="selectSaveBank" style="width:100%; border:solid 1px black;" onchange="modifyModalInput(this);">';
        banklistContents += '<option value="국민은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="국민은행"){banklistContents += 'selected';}
        banklistContents += '>국민은행</option>';
        banklistContents += '<option value="기업은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="기업은행"){banklistContents += 'selected';}
        banklistContents += '>기업은행</option>';
        banklistContents += '<option value="신한은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="신한은행"){banklistContents += 'selected';}
        banklistContents += '>신한은행</option>';
        banklistContents += '<option value="하나은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="하나은행"){banklistContents += 'selected';}
        banklistContents += '>하나은행</option>';
        banklistContents += '<option value="우리은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="우리은행"){banklistContents += 'selected';}
        banklistContents += '>우리은행</option>';
        banklistContents += '<option value="제일은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="제일은행"){banklistContents += 'selected';}
        banklistContents += '>제일은행</option>';
        banklistContents += '<option value="저축은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="저축은행"){banklistContents += 'selected';}
        banklistContents += '>저축은행</option>';
        banklistContents += '<option value="씨티은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="씨티은행"){banklistContents += 'selected';}
        banklistContents += '>씨티은행</option>';
        banklistContents += '<option value="농협은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="농협은행"){banklistContents += 'selected';}
        banklistContents += '>농협은행</option>';
        banklistContents += '<option value="수협은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="수협은행"){banklistContents += 'selected';}
        banklistContents += '>수협은행</option>';
        banklistContents += '<option value="신협은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="신협은행"){banklistContents += 'selected';}
        banklistContents += '>신협은행</option>';
        banklistContents += '<option value="경남은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="경남은행"){banklistContents += 'selected';}
        banklistContents += '>경남은행</option>';
        banklistContents += '<option value="전북은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="전북은행"){banklistContents += 'selected';}
        banklistContents += '>전북은행</option>';
        banklistContents += '<option value="대구은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="대구은행"){banklistContents += 'selected';}
        banklistContents += '>대구은행</option>';
        banklistContents += '<option value="부산은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="부산은행"){banklistContents += 'selected';}
        banklistContents += '>부산은행</option>';
        banklistContents += '<option value="광주은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="광주은행"){banklistContents += 'selected';}
        banklistContents += '>광주은행</option>';
        banklistContents += '<option value="제주은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="제주은행"){banklistContents += 'selected';}
        banklistContents += '>제주은행</option>';
        banklistContents += '<option value="새마을은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="새마을은행"){banklistContents += 'selected';}
        banklistContents += '>새마을은행</option>';
        banklistContents += '<option value="산업은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="산업은행"){banklistContents += 'selected';}
        banklistContents += '>산업은행</option>';
        banklistContents += "</select></td>";

        banklistContents += '<td style="width:10%" scope="row"><input class="input" style="width:90%;" type="text" name="selectSaveBankType" value="'+$('.hiddenSelectBanklist input[name=banktype]').eq(i).val()+'" onchange="modifyModalInput(this);" /></td></td>';
        banklistContents += '<td style="width:20%" scope="row"><input class="input" style="width:95%; text-align:left;" type="text" name="selectSaveAccount" value="'+$('.hiddenSelectBanklist input[name=account]').eq(i).val()+'" onchange="modifyModalInput(this);" onkeyup="onlyNumHipen(this)"/></td>';
        banklistContents += '<td style="width:25%" scope="row"><input class="input" style="width:95%;" type="text" name="selectSaveBreakdown" value="'+$('.hiddenSelectBanklist input[name=breakdown]').eq(i).val()+'"onchange="modifyModalInput(this);"></td>';
        banklistContents += '<td style="width:20%" scope="row"><input class="input" style="width:95%; text-align:right;" type="text" name="selectSaveBalance"';
        banklistContents += 'value="'+$('.hiddenSelectBanklist input[name=balance]').eq(i).val()+'" onFocus="deCommaStr(this);" onBlur="this.value = commaStr(this.value);" onchange="modifyModalInput(this);" onkeyup="onlyNumber(this)"/></td>';
        banklistContents += '<td style="width:5%"><input type="button" style="width:95%;" id="delBank" class="delBank" onclick="delBank(this)" value=" X " /></td>'
        banklistContents += '</tr>';
        $('#selectSaveTbody').append(banklistContents); // 추가기능
      }
    };
    $('.modal_select_Save_div').show(300);
    $('#foldSBtn').text('예적금▲');
  } else {
    // document.all.foldTarget.style.display="none"; //동작은 하나 시간 조절이 블가능
    $('#selectSaveTbody').children().remove();
    $('.modal_select_Save_div').hide(300);
    $('#foldSBtn').text('예적금▼');
  }
});

$('#foldDBtn').click(function() {
  if ($('#foldDBtn').text() == '보증금▼') {
    // document.all.foldTarget.style.display="block"; //동작은 하나 시간 조절이 블가
    for (var i=0; i<$(".hiddenSelectBanklist").length; i++){
      if($('.hiddenSelectBanklist input[name=type]').eq(i).val() == '보증금'){
        var banklistContents = '';
        banklistContents += '<tr class="modal_select_Deposit_row" id="modal_select_Deposit_row" name="'+$('.hiddenSelectBanklist').eq(i).val()+'">';
        banklistContents += '<input type="hidden" style="color:red" name="selectDepositIdx" value="'+$('.hiddenSelectBanklist input[name=idx]').eq(i).val()+'" />';
        banklistContents += '<td style="width:10%" scope="row"><select class="input" id="selectDepositType" name="selectDepositType" style="width:100%; border:solid 1px black;" onchange="modifyModalInput(this);">';
        banklistContents += '<option value="보통예금"';
        if($('.hiddenSelectBanklist input[name=type]').eq(i).val()=="보통예금"){banklistContents += 'selected';}
        banklistContents += '>보통예금</option>';
        banklistContents += '<option value="보증금"';
        if($('.hiddenSelectBanklist input[name=type]').eq(i).val()=="보증금"){banklistContents += 'selected';}
        banklistContents += '>보증금</option>';
        banklistContents += '<option value="예적금"';
        if($('.hiddenSelectBanklist input[name=type]').eq(i).val()=="예적금"){banklistContents += 'selected';}
        banklistContents += '>예적금</option>';
        banklistContents += '<option value="대출"';
        if($('.hiddenSelectBanklist input[name=type]').eq(i).val()=="대출"){banklistContents += 'selected';}
        banklistContents += '>대출</option>';
        banklistContents += '</select></td>';

        banklistContents += '<td style="width:10%" scope="row"><select class="input" id="selectDepositBank" name="selectDepositBank" style="width:100%; border:solid 1px black;" onchange="modifyModalInput(this);">';
        banklistContents += '<option value=""';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()==""){banklistContents += 'selected';}
        banklistContents += '></option>';
        banklistContents += '<option value="국민은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="국민은행"){banklistContents += 'selected';}
        banklistContents += '>국민은행</option>';
        banklistContents += '<option value="기업은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="기업은행"){banklistContents += 'selected';}
        banklistContents += '>기업은행</option>';
        banklistContents += '<option value="신한은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="신한은행"){banklistContents += 'selected';}
        banklistContents += '>신한은행</option>';
        banklistContents += '<option value="하나은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="하나은행"){banklistContents += 'selected';}
        banklistContents += '>하나은행</option>';
        banklistContents += '<option value="우리은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="우리은행"){banklistContents += 'selected';}
        banklistContents += '>우리은행</option>';
        banklistContents += '<option value="제일은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="제일은행"){banklistContents += 'selected';}
        banklistContents += '>제일은행</option>';
        banklistContents += '<option value="저축은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="저축은행"){banklistContents += 'selected';}
        banklistContents += '>저축은행</option>';
        banklistContents += '<option value="씨티은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="씨티은행"){banklistContents += 'selected';}
        banklistContents += '>씨티은행</option>';
        banklistContents += '<option value="농협은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="농협은행"){banklistContents += 'selected';}
        banklistContents += '>농협은행</option>';
        banklistContents += '<option value="수협은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="수협은행"){banklistContents += 'selected';}
        banklistContents += '>수협은행</option>';
        banklistContents += '<option value="신협은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="신협은행"){banklistContents += 'selected';}
        banklistContents += '>신협은행</option>';
        banklistContents += '<option value="경남은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="경남은행"){banklistContents += 'selected';}
        banklistContents += '>경남은행</option>';
        banklistContents += '<option value="전북은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="전북은행"){banklistContents += 'selected';}
        banklistContents += '>전북은행</option>';
        banklistContents += '<option value="대구은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="대구은행"){banklistContents += 'selected';}
        banklistContents += '>대구은행</option>';
        banklistContents += '<option value="부산은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="부산은행"){banklistContents += 'selected';}
        banklistContents += '>부산은행</option>';
        banklistContents += '<option value="광주은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="광주은행"){banklistContents += 'selected';}
        banklistContents += '>광주은행</option>';
        banklistContents += '<option value="제주은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="제주은행"){banklistContents += 'selected';}
        banklistContents += '>제주은행</option>';
        banklistContents += '<option value="새마을은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="새마을은행"){banklistContents += 'selected';}
        banklistContents += '>새마을은행</option>';
        banklistContents += '<option value="산업은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="산업은행"){banklistContents += 'selected';}
        banklistContents += '>산업은행</option>';
        banklistContents += "</select></td>";

        banklistContents += '<td style="width:10%" scope="row"><input class="input" style="width:90%;" type="text" name="selectDepositBankType" value="'+$('.hiddenSelectBanklist input[name=banktype]').eq(i).val()+'" onchange="modifyModalInput(this);"/></td></td>';
        banklistContents += '<td style="width:20%" scope="row"><input class="input" style="width:95%; text-align:left;" type="text" name="selectDepositAccount" value="'+$('.hiddenSelectBanklist input[name=account]').eq(i).val()+'" onchange="modifyModalInput(this);" onkeyup="onlyNumHipen(this)"/></td>';
        banklistContents += '<td style="width:25%" scope="row"><input class="input" style="width:95%;" type="text" name="selectDepositBreakdown" value="'+$('.hiddenSelectBanklist input[name=breakdown]').eq(i).val()+'" onchange="modifyModalInput(this);"></td>';
        banklistContents += '<td style="width:20%" scope="row"><input class="input" style="width:95%; text-align:right;" type="text" name="selectDepositBalance"';
        banklistContents += 'value="'+$('.hiddenSelectBanklist input[name=balance]').eq(i).val()+'" onFocus="deCommaStr(this);" onBlur="this.value = commaStr(this.value);" onchange="modifyModalInput(this);" onkeyup="onlyNumber(this)"/></td>';
        banklistContents += '<td style="width:5%"><input type="button" style="width:95%;" id="delBank" class="delBank" onclick="delBank(this)" value=" X " /></td>'
        banklistContents += '</tr>';
        $('#selectDepositTbody').append(banklistContents); // 추가기능
      }
    };
    $('.modal_select_Deposit_div').show(300);
    $('#foldDBtn').text('보증금▲');
  } else {
    // document.all.foldTarget.style.display="none"; //동작은 하나 시간 조절이 블가능
    $('#selectDepositTbody').children().remove();
    $('.modal_select_Deposit_div').hide(300);
    $('#foldDBtn').text('보증금▼');
  }
});

$('#foldLBtn').click(function() {
  if ($('#foldLBtn').text() == '대출▼') {
    // document.all.foldTarget.style.display="block"; //동작은 하나 시간 조절이 블가
    // $('#selectLoanTable').show(300);
    for (var i=0; i<$(".hiddenSelectBanklist").length; i++){
      if($('.hiddenSelectBanklist input[name=type]').eq(i).val() == '대출'){
        var banklistContents = '';
        banklistContents += '<tr class="modal_select_Loan_row" id="modal_select_Loan_row" name="'+$('.hiddenSelectBanklist').eq(i).val()+'">';
        banklistContents += '<input type="hidden" style="color:red" name="selectLoanIdx" value="'+$('.hiddenSelectBanklist input[name=idx]').eq(i).val()+'" />';
        banklistContents += '<td style="width:10%" scope="row"><select class="input" id="selectLoanType" name="selectLoanType" style="width:100%; border:solid 1px black;" onchange="modifyModalInput(this);">';
        banklistContents += '<option value="보통예금"';
        if($('.hiddenSelectBanklist input[name=type]').eq(i).val()=="보통예금"){banklistContents += 'selected';}
        banklistContents += '>보통예금</option>';
        banklistContents += '<option value="보증금"';
        if($('.hiddenSelectBanklist input[name=type]').eq(i).val()=="보증금"){banklistContents += 'selected';}
        banklistContents += '>보증금</option>';
        banklistContents += '<option value="예적금"';
        if($('.hiddenSelectBanklist input[name=type]').eq(i).val()=="예적금"){banklistContents += 'selected';}
        banklistContents += '>예적금</option>';
        banklistContents += '<option value="대출"';
        if($('.hiddenSelectBanklist input[name=type]').eq(i).val()=="대출"){banklistContents += 'selected';}
        banklistContents += '>대출</option>';
        banklistContents += '</select></td>';

        banklistContents += '<td style="width:10%" scope="row"><select class="input" id="selectLoanBank" name="selectLoanBank" style="width:100%; border:solid 1px black;" onchange="modifyModalInput(this);">';
        banklistContents += '<option value="국민은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="국민은행"){banklistContents += 'selected';}
        banklistContents += '>국민은행</option>';
        banklistContents += '<option value="기업은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="기업은행"){banklistContents += 'selected';}
        banklistContents += '>기업은행</option>';
        banklistContents += '<option value="신한은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="신한은행"){banklistContents += 'selected';}
        banklistContents += '>신한은행</option>';
        banklistContents += '<option value="하나은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="하나은행"){banklistContents += 'selected';}
        banklistContents += '>하나은행</option>';
        banklistContents += '<option value="우리은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="우리은행"){banklistContents += 'selected';}
        banklistContents += '>우리은행</option>';
        banklistContents += '<option value="제일은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="제일은행"){banklistContents += 'selected';}
        banklistContents += '>제일은행</option>';
        banklistContents += '<option value="저축은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="저축은행"){banklistContents += 'selected';}
        banklistContents += '>저축은행</option>';
        banklistContents += '<option value="씨티은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="씨티은행"){banklistContents += 'selected';}
        banklistContents += '>씨티은행</option>';
        banklistContents += '<option value="농협은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="농협은행"){banklistContents += 'selected';}
        banklistContents += '>농협은행</option>';
        banklistContents += '<option value="수협은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="수협은행"){banklistContents += 'selected';}
        banklistContents += '>수협은행</option>';
        banklistContents += '<option value="신협은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="신협은행"){banklistContents += 'selected';}
        banklistContents += '>신협은행</option>';
        banklistContents += '<option value="경남은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="경남은행"){banklistContents += 'selected';}
        banklistContents += '>경남은행</option>';
        banklistContents += '<option value="전북은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="전북은행"){banklistContents += 'selected';}
        banklistContents += '>전북은행</option>';
        banklistContents += '<option value="대구은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="대구은행"){banklistContents += 'selected';}
        banklistContents += '>대구은행</option>';
        banklistContents += '<option value="부산은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="부산은행"){banklistContents += 'selected';}
        banklistContents += '>부산은행</option>';
        banklistContents += '<option value="광주은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="광주은행"){banklistContents += 'selected';}
        banklistContents += '>광주은행</option>';
        banklistContents += '<option value="제주은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="제주은행"){banklistContents += 'selected';}
        banklistContents += '>제주은행</option>';
        banklistContents += '<option value="새마을은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="새마을은행"){banklistContents += 'selected';}
        banklistContents += '>새마을은행</option>';
        banklistContents += '<option value="산업은행"';
        if($('.hiddenSelectBanklist input[name=bank]').eq(i).val()=="산업은행"){banklistContents += 'selected';}
        banklistContents += '>산업은행</option>';
        banklistContents += "</select></td>";

        banklistContents += '<td style="width:10%" scope="row"><input class="input" style="width:90%;" type="text" name="selectLoanBankType" value="'+$('.hiddenSelectBanklist input[name=banktype]').eq(i).val()+'" onchange="modifyModalInput(this);" /></td></td>';
        banklistContents += '<td style="width:20%" scope="row"><input class="input" style="width:95%; text-align:left;" type="text" name="selectLoanAccount" value="'+$('.hiddenSelectBanklist input[name=account]').eq(i).val()+'" onchange="modifyModalInput(this);" onkeyup="onlyNumHipen(this)"/></td>';
        banklistContents += '<td style="width:25%" scope="row"><input class="input" style="width:95%;" type="text" name="selectLoanBreakdown" value="'+$('.hiddenSelectBanklist input[name=breakdown]').eq(i).val()+'" onchange="modifyModalInput(this);"></td>';
        banklistContents += '<td style="width:20%" scope="row"><input class="input" style="width:95%; text-align:right;" type="text" name="selectLoanBalance"';
        banklistContents += 'value="'+$('.hiddenSelectBanklist input[name=balance]').eq(i).val()+'" onFocus="deCommaStr(this);" onBlur="this.value = commaStr(this.value);" onchange="modifyModalInput(this);" onkeyup="onlyNumber(this)"/></td>';
        banklistContents += '<td style="width:5%"><input type="button" style="width:95%;" id="delBank" class="delBank" onclick="delBank(this)" value=" X " /></td>'
        banklistContents += '</tr>';
        $('#selectLoanTbody').append(banklistContents); // 추가기능
      }
    };
    $('.modal_select_Loan_div').show(300);
    $('#foldLBtn').text('대출▲');
  } else {
    // document.all.foldTarget.style.display="none"; //동작은 하나 시간 조절이 블가능
    // $('#selectLoanTable').hide(300);
    $('#selectLoanTbody').children().remove();
    $('.modal_select_Loan_div').hide(300);
    $('#foldLBtn').text('대출▼');
  }
});

var nowUrl = '';
var nowUrlArr;
nowUrl = window.location.href;
nowUrl = nowUrl.split('?');
nowUrlArr = nowUrl[0].split('/');

$('.fixed_top > th').click(function() {
  var th = $(this);
  var thText = $(this).text();
  var thColor = $(this).css("background");
  var baseUrl = '/index.php/fundreporting/fundreporting_list?';
  var sortUrl = '/index.php/fundreporting/sort?';
  var enduserUrl = '/index.php/fundreporting/enduser?';
  var replaceUrl;

  if (thText == '확정일' || thText == 'END-USER') {

    if (nowUrlArr[5] != "sort" && thText == "확정일") {
      replaceUrl = sortUrl+nowUrl[1];
      window.location.replace(replaceUrl);

    } else if (nowUrlArr[5] == "sort" && thText == "확정일") {
      replaceUrl = baseUrl+nowUrl[1];
      window.location.replace(replaceUrl);

    } else if (nowUrlArr[5] != 'enduser' && thText == 'END-USER') {
      replaceUrl = enduserUrl+nowUrl[1];
      window.location.replace(replaceUrl);

    } else if (nowUrlArr[5] == 'enduser' && thText == 'END-USER') {
      replaceUrl = baseUrl+nowUrl[1];
      window.location.replace(replaceUrl);

    } else {
      alert('정렬에 오류가 발생했습니다.');
    }
  } else if (thText == '발행일') {
    replaceUrl = baseUrl+nowUrl[1];
    window.location.replace(replaceUrl);
  } else {
    return;
  };
});

$("#search_btn").on("click", function(event) {

  $("#searchResult").toggle();


});


//마지막줄 복사
$('#itemPaste').click(function() {
  var num = $(".row").length - 1;

  var dateOfIssue = $(".row input[name='dateOfIssue']").eq(num).val();
  var fixedDate = $(".row input[name='fixedDate']").eq(num).val();
  var dueDate = $(".row input[name='dueDate']").eq(num).val();
  var type = $(".row select[name='type']").eq(num).val();
  var bankType = $(".row select[name='bankType']").eq(num).val();
  var customer = $(".row input[name='customer']").eq(num).val();
  var endUser = $(".row input[name='endUser']").eq(num).val();
  var breakdown = $(".row input[name='breakdown']").eq(num).val();
  var requisition = $(".row input[name='requisition']").eq(num).val();
  var deposit = $(".row input[name='deposit']").eq(num).val().replace(/,/g, '');
  var withdraw = $(".row input[name='withdraw']").eq(num).val().replace(/,/g, '');
  var yesBalance = $(".row input[name='balance']").eq(num).val().replace(/,/g, '');
  var balance = commaStr(Number(yesBalance) + Number(deposit) - Number(withdraw));
  deposit = commaStr(deposit);
  withdraw = commaStr(withdraw);

  var contents = '';
  contents += '<tr class="row">';
  contents += '<input type="hidden" style="color:red" name="idx" value="" />'
  contents += '<td class="cell0"><input style="border:solid 1px green; border-radius: 10px;" type="checkbox" name="delRow"></td>';
  contents += "<td class='cell1' scope='row'><input style='width:100%; font-size: 11px; border:solid 1px green;' type='text' name='dateOfIssue' value='" + dateOfIssue + "' onkeyup='auto_date_format(event, this);  onlyNumHipen(this);' onkeypress='auto_date_format(event, this);  onlyNumHipen(this);' maxlength='10' /></td>";
  contents += "<td class='cell2' scope='row'><input style='width:100%; font-size: 11px; border:solid 1px green;' type='text' name='fixedDate' value='" + fixedDate + "' onkeyup='auto_date_format(event, this);  onlyNumHipen(this);' onkeypress='auto_date_format(event, this);  onlyNumHipen(this);' maxlength='10' /></td>";
  contents += "<td class='cell3' scope='row'><input style='width:100%; font-size: 11px; border:solid 1px green;' type='text' name='dueDate' value='" + dueDate + "'  onkeyup='auto_date_format(event, this);  onlyNumHipen(this);' onkeypress='auto_date_format(event, this);  onlyNumHipen(this);' maxlength='10' /></td>";
  contents += '<td class="cell4" scope="row"><select style="width:100%; font-size: 11px; border:solid 1px green;" name="type">';
  contents += '<option value="' + type + '">' + type + '</option>';
  contents += '<option value=""></option>';
  contents += '<option value="매입채무">매입채무</option>';
  contents += '<option value="매출채권">매출채권</option>';
  contents += '<option value="운영비용">운영비용</option>';
  contents += '</select></td>';
  contents += "<td class='cell5' scope='row'><select name='bankType' style='width:100%; font-size: 11px; text-align:left; border:solid 1px green;'>";
  contents += "<option value='" + bankType + "' selected>" + bankType + "</option>";
  contents += bankTypeHidden;
  contents += '<option value=""></option>';
  contents += "</select></td>";
  contents += "<td class='cell6' scope='row'><input style='width:100%; font-size: 11px; border:solid 1px green'; type='text' name='customer' value='" + customer + "'/></td>";
  contents += "<td class='cell7' scope='row'><input style='width:100%; font-size: 11px; border:solid 1px green'; type='text' name='endUser' value='" + endUser + "'/></td>";
  contents += "<td class='cell8' scope='row'><input style='width:100%; font-size: 11px; border:solid 1px green'; type='text' name='breakdown' value='" + breakdown + "'/></td>";
  contents += "<td class='cell9' scope='row'><input style='width:100%; font-size: 11px; border:solid 1px green;' type='text' name='requisition' value='" + requisition + "' class='requisition' onchange='calcBalance(this);' onFocus='deCommaStr(this);' onBlur='this.value = commaStr(this.value);' onkeyup='onlyNumber(this);'/></td>";
  contents += "<td class='cell10' scope='row'><input style='width:100%; font-size: 11px; border:solid 1px green;' type='text' name='deposit' value='" + deposit + "' class='deposit' onchange='calcBalance(this);' onFocus='deCommaStr(this);' onBlur='this.value = commaStr(this.value);' onkeyup='onlyNumber(this);'/></td>";
  contents += "<td class='cell11' scope='row'><input style='width:100%; font-size: 11px; border:solid 1px green;' type='text' name='withdraw' value='" + withdraw + "' class='withdraw' onchange='calcBalance(this);' onFocus='deCommaStr(this);' onBlur='this.value = commaStr(this.value);' onkeyup='onlyNumber(this);'/></td>";
  contents += "<td class='cell12' scope='row'><input style='width:100%; font-size: 11px; border:solid 1px green;' type='text' name='balance' value='' onFocus='deCommaStr(this);' onBlur='this.value = commaStr(this.value);' readonly/></td>";
  contents += "<td class='cell13' scope='row'><input style='width:100%; font-size: 11px; border:solid 1px green;' type='text' name='balance2' value='' onFocus='deCommaStr(this);' onBlur='this.value = commaStr(this.value);' readonly/></td>";
  contents += '<td><input type="button" name="delRow" class="delRow" value=" X " /></td>';
  contents += '</tr>';



  $('#AddOption').append(contents); // 추가기능
  $('.table-box').scrollTop($('.table-box')[0].scrollHeight);

  $('.delRow').click(function() { // 삭제기능
    $(this).parent().parent().remove();
  });



  MoveTable('AddOption');


});

function auto_date_format( e, oThis ){
        var num_arr = [
            97, 98, 99, 100, 101, 102, 103, 104, 105, 96,
            48, 49, 50, 51, 52, 53, 54, 55, 56, 57
        ]
        var key_code = ( e.which ) ? e.which : e.keyCode;
        if( num_arr.indexOf( Number( key_code ) ) != -1 ){
            var len = oThis.value.length;
            if( len == 4 ) oThis.value += "-";
            if( len == 7 ) oThis.value += "-";
        }
    }

    var agent = navigator.userAgent.toLowerCase();

    if ( (navigator.appName == 'Netscape' && navigator.userAgent.search('Trident') != -1) || (agent.indexOf("msie") != -1) ) {
      $(".table-container").css('padding-top', '43px');
      // padding-top:43px;
    }

    //input 달력
    ( function( factory ) {
       if ( typeof define === "function" && define.amd ) {

          // AMD. Register as an anonymous module.
          define( [ "../widgets/datepicker" ], factory );
       } else {

          // Browser globals
          factory( jQuery.datepicker );
       }
    }( function( datepicker ) {

    datepicker.regional.ko = {
       closeText: "닫기",
       prevText: "이전달",
       nextText: "다음달",
       currentText: "오늘",
       monthNames: [ "1월","2월","3월","4월","5월","6월",
       "7월","8월","9월","10월","11월","12월" ],
       monthNamesShort: [ "1월","2월","3월","4월","5월","6월",
       "7월","8월","9월","10월","11월","12월" ],
       dayNames: [ "일요일","월요일","화요일","수요일","목요일","금요일","토요일" ],
       dayNamesShort: [ "일","월","화","수","목","금","토" ],
       dayNamesMin: [ "일","월","화","수","목","금","토" ],
       weekHeader: "주",
       dateFormat: "yy-mm-dd",
       firstDay: 0,
       isRTL: false,
       showMonthAfterYear: true,
       yearSuffix: "년",
      showOn: "button",
      changeMonth: "true",
      changeYear: "true",
      buttonImage:"https://jqueryui.com/resources/demos/datepicker/images/calendar.gif",

      buttonImageOnly: true
    };



    datepicker.setDefaults( datepicker.regional.ko );

    $("#txt_prodStart" ).datepicker();
    $('img.ui-datepicker-trigger').attr('align', 'absmiddle');
    // $("img.ui-datepicker-trigger").attr("style", "margin-left:2px; vertical-align:middle; cursor: Pointer;");
    // $('img.ui-datepicker-trigger').css({'cursor':'pointer', 'margin-left':'5px'});  //아이콘(icon) 위치
    $('.ui-datepicker ').css({ "margin-left" : "141px", "margin-top": "-223px"});  //달력(calendar) 위치
    $('img.ui-datepicker-trigger').attr('align', 'absmiddle');
    // return datepicker.regional.ko;

    } ) );


    $(function(){

        $("#toDate").datepicker();

        $("#fromDate").datepicker();
    });

    function validateYear( date ){
      var result = false;
      var val = date.split('-')[0];

      if (val.indexOf('_')>-1){
        result = false;
      } else if (val.length <4){
        reslut = false;
      } else if ( Number(val)<2000 ) {
        result = false;
      } else {
        result = true;
      }

      return result;
    }

    function validateMonth( date ) {
      var result = false;
      var val = date.split('-')[1];

      if (val.indexOf('_')>-1) {
        result = false;
      } else if ( Number(val) > 12 || Number(val)<1) {
        result = false;
      } else {
        result = true;
      }

      return result;
    }

    function validateDay( date ) {
      var result = false;
      var y = date.split('-')[0];
      var m = date.split('-')[1];
      var d = date.split('-')[2];
      var lastDay = (new Date(y, m, 0)).getDate();

      if(d.indexOf('_')>-1) {
        result = false;
      } else if (Number(d) > Number(lastDay) || Number(d)<1) {
        result = false;
      } else {
        result = true;
      }

      return result;
    }

    // 숫자,'-', ':', 띄어쓰기 입력 함수
  function onlyNumHipenCol(obj) {
    var val=obj.value;
    var re=/[^0-9- :]/gi;
    obj.value=val.replace(re,"");
  }

  function auto_datetime_format( e, oThis ){
      var num_arr = [
          97, 98, 99, 100, 101, 102, 103, 104, 105, 96,
          48, 49, 50, 51, 52, 53, 54, 55, 56, 57
      ]
      var key_code = ( e.which ) ? e.which : e.keyCode;
      if( num_arr.indexOf( Number( key_code ) ) != -1 ){
          var len = oThis.value.length;
          if( len == 4 ) oThis.value += "-";
          if( len == 7 ) oThis.value += "-";
          if( len == 10 ) oThis.value += " ";
          if( len == 13 ) oThis.value += ":";
          if( len == 16 ) oThis.value += ":";
      }
  }

//     $(window).unload(function() { alert('Handler for .unload() called.'); });
//
//     $(window).unload( function () { alert("Bye now!"); } );
//
//     $(window).on('beforeunload', function() {
//     alert("Bye now!");
// });

// var checkUnload = true;
//
// $(window).on("beforeunload", function(){
//   var url = window.location.href;
//     // if(checkUnload) return "이 페이지를 벗어나면 작성된 내용은 저장되지 않습니다.";
//     $.ajax({
//       type: 'POST',
//       url: '/index.php/fundreporting/logout',
//       datatype: 'json',
//       data: {
//         url:url
//       },
//       success: function(data) {
//         //console.log(data);
//       },
//       error: function(jqXHR, textStatus, errorThrown) {
//         if (jqXHR.statusText = "Internal Server Error") {
//           alert(delList[i] + '행 데이터 삭제 실패했습니다.');
//         }
//       }
//     });
//
// });


// $(".dateCheck").blur(function(){
//   alert($(this).val());
// })
