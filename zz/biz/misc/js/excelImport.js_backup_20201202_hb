function excelExport(event) {
  var input = event.target;
  var reader = new FileReader();
  var rABS = !!reader.readAsBinaryString;
  var len = 0;
  var last = $(".row").length - 1;

  reader.onload = function() {
    var fileData = reader.result;


    if ( (navigator.appName == 'Netscape' && navigator.userAgent.search('Trident') != -1) || (agent.indexOf("msie") != -1) ) {
      var fileData = reader.result;
      if(!rABS) fileData = new Uint8Array(fileData);
      var wb = XLSX.read(fileData, {
        type: rABS ? 'binary' : 'array',
        cellDates: true,
        cellNF: false,
        cellText: false
      });
      } else {
        var fileData = reader.result;
        var wb = XLSX.read(fileData, {
          type: 'binary',
          cellDates: true,
          cellNF: false,
          cellText: false
        });
      }


    // Sun Apr 26 2015 23:59:08 GMT+0900 (대한민국 표준시)
    wb.SheetNames.forEach(function(sheetName) {
      var rowObj = XLSX.utils.sheet_to_json(wb.Sheets[sheetName], {
        raw: false,
        dateNF: 'YYYY-MM-DD'
      });
      len = len + rowObj.length; // 엑셀 임포트한 길이
      var contents = '';

      if ($(".row").length == 0) {
        var lastBalance = 0;
      } else {
        var lastBalance = $(".row input[name='balance']").eq(last).val().replace(/,/g, '');
      }

      for (var i = 0; i < len; i++) {

        var deposit = rowObj[i].입금;
        var withdraw = rowObj[i].출금;

        if (typeof rowObj[i].출금 == "undefined") {
          rowObj[i].출금 = '';
          var withdraw = 0;
        }
        if (typeof rowObj[i].입금 == "undefined") {
          rowObj[i].입금 = '';
          var deposit = 0;
        }

        var lastBalance = Number(lastBalance) + Number(rowObj[i].입금) - Number(rowObj[i].출금);

        contents += '<tr class="row" id = ' + rowObj[i].은행구분 + '>';
        contents += '<input type="hidden" style="color:red" name="idx" value="" />'
        contents += '<td><input style="border:solid 1px red; border-radius: 10px;" type="checkbox" name="delRow"></td>';
        contents += '<td scope="row"><input style="width:100%; border:solid 1px red; border-radius: 10px; font-size: 11px;" type="text" name="dateOfIssue" value="' + rowObj[i].발행일 + '" onkeyup="auto_date_format(event, this); onlyNumHipen(this);" onkeypress="auto_date_format(event, this); onlyNumHipen(this);" maxlength="10"/></td>';
        contents += '<td scope="row"><input style="width:100%; border:solid 1px red; border-radius: 10px; font-size: 11px;" type="text" name="fixedDate" value="' + rowObj[i].예정일 + '" onkeyup="auto_date_format(event, this); onlyNumHipen(this);" onkeypress="auto_date_format(event, this); onlyNumHipen(this);" maxlength="10"/></td>';
        contents += '<td scope="row"><input style="width:100%; border:solid 1px red; border-radius: 10px; font-size: 11px;" type="text" name="dueDate" value="' + rowObj[i].확정일 + '" onkeyup="auto_date_format(event, this); onlyNumHipen(this);" onkeypress="auto_date_format(event, this); onlyNumHipen(this);" maxlength="10"/></td>';
        contents += "<td scope='row'><select style='width:100%; border:solid 1px red; border-radius: 10px; font-size: 11px;' name='type'>";
        contents += "<option  value='"+rowObj[i].대구분+"' selected>"+rowObj[i].대구분+"</option>";
        contents += '<option value="매입채무">매입채무</option>';
        contents += '<option value="매출채권">매출채권</option>';
        contents += '<option value="운영비용">운영비용</option>';
        contents += '</select></td>';
        contents += "<td scope='row'><select name='bankType' style='width:100%;  border:solid 1px red; border-radius: 10px; font-size: 11px;' onchange='modifyInput(this);' onmouseover='select2Mouseover(this);'>";
        contents += "<option value='"+rowObj[i].은행구분+"' selected>"+rowObj[i].은행구분+"</option>";
        contents += "<option value=''>&nbsp;</option>";
        contents += bankTypeHidden;
        contents += "</select></td>";
        contents += '<td scope="row"><input style="width:100%; border:solid 1px red; border-radius: 10px; font-size: 11px;" type="text" name="customer" value="' + rowObj[i].거래처 + '"/></td>';
        contents += '<td scope="row"><input style="width:100%; border:solid 1px red; border-radius: 10px; font-size: 11px;" type="text" name="endUser" value="' + rowObj[i].ENDUSER + '"/></td>';
        contents += '<td scope="row"><input style="width:100%; border:solid 1px red; border-radius: 10px; font-size: 11px;" type="text" name="breakdown" value="' + rowObj[i].내역 + '"/></td>';
        contents += '<td scope="row"><input style="width:100%; border:solid 1px red; border-radius: 10px; font-size: 11px;" type="text" name="requisition" value="' + commaStr(rowObj[i].청구금액) + '"  onFocus="deCommaStr(this);" onBlur="this.value = commaStr(this.value);" onkeyup="onlyNumber(this)";/></td>';
        contents += '  <td scope="row"><input style="width:100%; border:solid 1px red; border-radius: 10px; font-size: 11px;" type="text" name="deposit" class="deposit" value="' + commaStr(rowObj[i].입금) + '"  onchange="calcBalance(this)" onFocus="deCommaStr(this);" onBlur="this.value = commaStr(this.value);" onkeyup="onlyNumber(this)"/></td>';
        contents += '<td scope="row"><input style="width:100%; border:solid 1px red; border-radius: 10px; font-size: 11px;" type="text" name="withdraw" class="withdraw" value="' + commaStr(rowObj[i].출금) + '"  onchange="calcBalance(this)" onFocus="deCommaStr(this);" onBlur="this.value = commaStr(this.value);" onkeyup="onlyNumber(this)"/></td>';
        contents += '<td scope="row"><input style="width:100%; border:solid 1px red; border-radius: 10px; font-size: 11px;" type="text" name="balance" class="balance" value="' + commaStr(lastBalance) + '" onFocus="deCommaStr(this);" onBlur="this.value = commaStr(this.value);" readonly/></td>';
        contents += '<td scope="row"><input style="width:100%; border:solid 1px red; border-radius: 10px; font-size: 11px;" type="text" name="balance2" value="' + commaStr(lastBalance) + '" onFocus="deCommaStr(this);" onBlur="this.value = commaStr(this.value);" readonly/></td>';
        contents += '<td><input type="button" name="delRow" class="delRow" value=" X " /></td>';
        contents += '</tr>';



      }
      // console.log(contents);
      var contents = contents.replace(/undefined/g, '');
      $('#AddOption').append(contents);
      $('.table-box').scrollTop($('.table-box')[0].scrollHeight);
    })

    // $('.deposit, .withdraw, .balance, .balance2').keyup(function(){
    //   $(this).val( $(this).val().replace(/[^0-9]/gi,"") ); //숫자만 입력가능
    // });

    $('.delRow').click(function() {
      $(this).parent().parent().remove();
    });

    $(document).ready(function() {

      MoveTable('AddOption');

    });


    function MoveTable(id) {
      if (id.indexOf("#") == -1) {
        id = "#" + id;
      }
      $(id).find("input:text").keyup(function(e) {
        var ths = $(this);
        tblMoveCmn(e.keyCode, ths);
      });
    }

    /*37: ←, 38: ↑, 39: →, 40: ↓ */
    function tblMoveCmn(key, ths) {
      var tName = $(ths).prop("tagName").toLowerCase();
      if (key == 37) {
        leftFsCmn(ths);
      }
      if (key == 38 && tName.indexOf("select") == -1) {
        upFsCmn(ths);
      }
      if (key == 39) {
        rightFsCmn(ths);
      }
      if (key == 40 && tName.indexOf("select") == -1) {
        downFsCmn(ths);

      }
    }

    // /*왼쪽으로 이동*/
    // function leftFsCmn(ths) {
    //   var tdObj = ths.parents("td").eq(0);
    //   if (tdObj.prev().children("input[type=text]").length > 0) {
    //     tdObj.prev().children("input[type=text]").eq(0).select();
    //     return;
    //   }
    // }
    //
    // /*오른쪽으로 이동*/
    // function rightFsCmn(ths) {
    //   var tdObj = ths.parents("td").eq(0);
    //   if (tdObj.next().children("input[type=text]").length > 0) {
    //     tdObj.next().children("input[type=text]").eq(0).select();
    //     return;
    //   }
    // }
    //
    // /*위로 이동*/
    // function upFsCmn(ths) {
    //   // var rowIndex = $(this).parent().parent().children().index($(this).parent());
    //   // var colIndex = $(this).parent().children().index($(this));
    //   var tdObj = ths.parents("td").eq(0);
    //   var tdIdx = tdObj.index();
    //   var trObj = tdObj.parents("tr").eq(0);
    //   var trIdx = trObj.index();
    //   // alert(tdIdx + "/" + trIdx + "/");
    //   if (trIdx > 0) {
    //     var ptdObj = trObj.prev().children("td").eq(tdIdx);
    //     if (ptdObj.children("input[type=text]").length > 0) {
    //       ptdObj.prev().children("input[type=text]").eq(0).focus();
    //       return;
    //     }
    //   }
    // }
    // // $("input").eq(index).focus();
    // /*아래로 이동*/
    // function downFsCmn(ths) {
    //   var tdObj = ths.parents("td").eq(0);
    //   var tdIdx = tdObj.index();
    //   var trObj = tdObj.parents("tr").eq(0);
    //   var trIdx = Number(trObj.index()) + 1;
    //   var ntdObj = trObj.next().children("td").eq(tdIdx);
    //   if (ntdObj.children("input[type=text]").length > 0) {
    //     ntdObj.prev().children("input[type=text]").eq(0).focus();
    //     return;
    //
    //   }
    // }
    //
    // $('.row input').focus(function() {
    //   this.select();
    // });
  };

  var agent = navigator.userAgent.toLowerCase();

  if ( (navigator.appName == 'Netscape' && navigator.userAgent.search('Trident') != -1) || (agent.indexOf("msie") != -1) ) {
    reader.readAsArrayBuffer(input.files[0]);
  } else {
    reader.readAsBinaryString(input.files[0]);
  }

  $(function(){
    $('input[name=dateOfIssue]').datepicker();
    $('input[name=fixedDate]').datepicker();
    $('input[name=dueDate]').datepicker();
  });

}
