<?php
class Fundreporting extends CI_Controller {
    function __construct(){
      parent::__construct();

      $this->load->database();
      ob_start();
      $this->load->library('session');
      $config['url_suffix'] = 'html';
    }

    function fundreporting_list(){
      $get = $this->input->get('company');
      if($get){
        $company = $get;
      } else {
        $company = 'DUIT';
      }
      $this->load->model('STC_Fundreporting');
      $this->load->library('pagination');
      $config['base_url'] = 'http:///sales.durianit.co.kr/index.php/fundreporting/fundreporting_list/page/';
      $config['total_rows'] = $this->STC_Fundreporting->count($company);
      $config['per_page'] = 100;
      $config['uri_segment'] = 4;
      $config['num_links'] = 9;
      $config['first_link'] = '처음';
      $config['last_link'] = '끝';
      $getUrl = '?company='.$company;
      $config['suffix'] = $getUrl;
      $config['first_url'] = '1'.$getUrl;
      $this->pagination->initialize($config);
      $page = $this->uri->segment(4,1);
        if($page > 1){
              $start = (($page / $config['per_page'])) * $config['per_page'];
        } else {
              $start = ($page - 1) * $config['per_page'];
        }
      $lastPage = ceil($config['total_rows'] / $config['per_page']);
      $limit = $config['per_page'];

      $data['pagination'] = $this->pagination->create_links();
      $data['bankBook'] = $this->STC_Fundreporting->bankbook($company);
      $data['list'] = $this->STC_Fundreporting->accountlist($start, $limit,$company);
      if($config['total_rows']<100){
        $data['pagingBalance'] = 0;
      } else if($page == ($lastPage-1)*100){
        $data['pagingBalance'] = 0;
      } else if($page==1){
        $limit = $config['total_rows'] - $config['per_page'];
        $data['pagingBalance'] = $this->STC_Fundreporting->pagingbalance($limit,$company);
      } else {
        $limit = $config['total_rows'] - ($page + $config['per_page']);
        $data['pagingBalance'] = $this->STC_Fundreporting->pagingbalance($limit,$company);
      }

      $data['bond'] = $this->STC_Fundreporting->bond($company);
      $data['debt'] = $this->STC_Fundreporting->debt($company);
      $data['selectBanklist'] = $this->STC_Fundreporting->selectbankbook($company);
      $data['selectBankTypeList'] = $this->STC_Fundreporting->selectbanktypelist($company);
      // $data['selectLoanBanklist']= $this->STC_Fundreporting->selectLoanAccount($company);
      // $data['selectSaveBanklist']= $this->STC_Fundreporting->selectSaveAccount($company);
      // $data['selectDepositBanklist']= $this->STC_Fundreporting->selectDepositAccount($company);


      $this->load->view('fundreporting_list', $data);
    }

    function sort(){
      $get = $this->input->get('company');
      if($get){
        $company = $get;
      } else {
        $company = 'DUIT';
      }
      $this->load->model('STC_Fundreporting');
      $this->load->library('pagination');
      $config['base_url'] = 'http:///sales.durianit.co.kr/index.php/fundreporting/sort/page/';
      $config['total_rows'] = $this->STC_Fundreporting->count($company);
      $config['per_page'] = 100;
      $config['uri_segment'] = 4;
      $config['num_links'] = 9;
      $config['first_link'] = '처음';
      $config['last_link'] = '끝';
      $getUrl = '?company='.$company;
      $config['suffix'] = $getUrl;
      $config['first_url'] = '1'.$getUrl;
      $this->pagination->initialize($config);
      $page = $this->uri->segment(4,1);
        if($page > 1){
              $start = (($page / $config['per_page'])) * $config['per_page'];
        } else {
              $start = ($page - 1) * $config['per_page'];
        }
      $lastPage = ceil($config['total_rows'] / $config['per_page']);
      $limit = $config['per_page'];

      $data['pagination'] = $this->pagination->create_links();
      $data['bankBook'] = $this->STC_Fundreporting->bankbook($company);
      $data['list'] = $this->STC_Fundreporting->sort($start, $limit,$company);
      if($config['total_rows']<100){
        $data['pagingBalance'] = 0;
      } else if($page == ($lastPage-1)*100){
        $data['pagingBalance'] = 0;
      } else if($page==1){
        $limit = $config['total_rows'] - $config['per_page'];
        $data['pagingBalance'] = $this->STC_Fundreporting->pagingbalance($limit,$company);
      } else {
        $limit = $config['total_rows'] - ($page + $config['per_page']);
        $data['pagingBalance'] = $this->STC_Fundreporting->pagingbalance($limit,$company);
      }
      $data['bond'] = $this->STC_Fundreporting->bond($company);
      $data['debt'] = $this->STC_Fundreporting->debt($company);
      $data['selectBanklist'] = $this->STC_Fundreporting->selectbankbook($company);
      $data['selectBankTypeList'] = $this->STC_Fundreporting->selectbanktypelist($company);
      // $data['selectLoanBanklist']= $this->STC_Fundreporting->selectLoanAccount($company);
      // $data['selectSaveBanklist']= $this->STC_Fundreporting->selectSaveAccount($company);
      // $data['selectDepositBanklist']= $this->STC_Fundreporting->selectDepositAccount($company);

      $this->load->view('fundreporting_list', $data);
    }

    function enduser(){
      $get = $this->input->get('company');
      if($get){
        $company = $get;
      } else {
        $company = 'DUIT';
      }
      $this->load->model('STC_Fundreporting');

      $this->load->library('pagination');
      $config['base_url'] = 'http:///sales.durianit.co.kr/index.php/fundreporting/enduser/page/';
      $config['total_rows'] = $this->STC_Fundreporting->count($company);
      $config['per_page'] = 100;
      $config['uri_segment'] = 4;
      $config['num_links'] = 9;
      $config['first_link'] = '처음';
      $config['last_link'] = '끝';
      $getUrl = '?company='.$company;
      $config['suffix'] = $getUrl;
      $config['first_url'] = '1'.$getUrl;
      $this->pagination->initialize($config);
      $page = $this->uri->segment(4,1);
        if($page > 1){
              $start = (($page / $config['per_page'])) * $config['per_page'];
        } else {
              $start = ($page - 1) * $config['per_page'];
        }
      $lastPage = ceil($config['total_rows'] / $config['per_page']);
      $limit = $config['per_page'];

      $data['pagination'] = $this->pagination->create_links();
      $data['bankBook'] = $this->STC_Fundreporting->bankbook($company);
      $data['list'] = $this->STC_Fundreporting->enduser($start, $limit,$company);
      if($config['total_rows']<100){
        $data['pagingBalance'] = 0;
      } else if($page == ($lastPage-1)*100){
        $data['pagingBalance'] = 0;
      } else if($page==1){
        $limit = $config['total_rows'] - $config['per_page'];
        $data['pagingBalance'] = $this->STC_Fundreporting->pagingbalance($limit,$company);
      } else {
        $limit = $config['total_rows'] - ($page + $config['per_page']);
        $data['pagingBalance'] = $this->STC_Fundreporting->pagingbalance($limit,$company);
      }
      $data['bond'] = $this->STC_Fundreporting->bond($company);
      $data['debt'] = $this->STC_Fundreporting->debt($company);
      $data['selectBanklist'] = $this->STC_Fundreporting->selectbankbook($company);
      $data['selectBankTypeList'] = $this->STC_Fundreporting->selectbanktypelist($company);
      // $data['selectLoanBanklist']= $this->STC_Fundreporting->selectLoanAccount($company);
      // $data['selectSaveBanklist']= $this->STC_Fundreporting->selectSaveAccount($company);
      // $data['selectDepositBanklist']= $this->STC_Fundreporting->selectDepositAccount($company);

      $this->load->view('fundreporting_list', $data);
    }

    function delete(){
      $get = $this->input->get('company');
      if($get){
        $company = $get;
      } else {
        $company = 'DUIT';
      }
        $delData = $this->input->post('data');
        $this->load->model('STC_Fundreporting');

        $data = array(
          'idx' => $delData
        );
        $result = $this->STC_Fundreporting->delete($data);
        $this->STC_Fundreporting->bankbookupdate($company);
        echo json_encode($result);
      }

    function download(){
      $this->load->helper('download');
      $data = file_get_contents("./misc/excelFile/sample.xlsx");
      $name = 'sample.xlsx';

      force_download($name, $data);
    }

    function update() {
      $get = $this->input->get('company');
      if($get){
        $company = $get;
      } else {
        $company = 'DUIT';
      }
      if($this->input->post('dateOfIssue')!=''){
        $dateOfIssue = $this->input->post('dateOfIssue');
      }else{
        $dateOfIssue = null;
      }
      if($this->input->post('fixedDate')!=''){
        $fixedDate = $this->input->post('fixedDate');
      }else{
        $fixedDate = NULL;
      }
      if($this->input->post('dueDate')!=''){
        $dueDate = $this->input->post('dueDate');
      }else{
        $dueDate = null;
      }
      if($this->input->post('type')!=''){
        $type = $this->input->post('type');
      }else{
        $type = null;
      }
      if($this->input->post('requisition')!=''){
        $requisition = $this->input->post('requisition');
      }else{
        $requisition = null;
      }
      if($this->input->post('deposit')!=''){
        $deposit = $this->input->post('deposit');
      }else{
        $deposit = null;
      }
      if($this->input->post('withdraw')!=''){
        $withdraw = $this->input->post('withdraw');
      }else{
        $withdraw = null;
      }
      if($this->input->post('endUser')!=''){
        $endUser = $this->input->post('endUser');
      }else{
        $endUser = null;
      }
      $idx = $this->input->post('idx');
      if($this->input->post('bankType')!=''){
        $bankType = $this->input->post('bankType');
      }else{
        $bankType = null;
      }
      $customer = $this->input->post('customer');
      $breakdown = $this->input->post('breakdown');

      $this->load->model('STC_Fundreporting');
      $data = array(
        'dateOfIssue' => $dateOfIssue,
        'fixedDate' => $fixedDate,
        'dueDate' => $dueDate,
        'type' => $type,
        'bankType' => $bankType,
        'customer' => $customer,
        'endUser' => $endUser,
        'breakdown' => $breakdown,
        'requisition' => $requisition,
        'deposit' => $deposit,
        'withdraw' => $withdraw,
        'company' => $company,
      );
    $updateResult=$this->STC_Fundreporting->update($data, $idx);
    $bankBookUpdateResult = $this->STC_Fundreporting->bankbookupdate($company);
    if ($updateResult=='true' && $bankBookUpdateResult == 'true'){
      echo json_encode("true");
    } else {
      echo json_encode("false");
    }
    }

    function insert() {
      $get = $this->input->get('company');
      echo $get;
      if($get){
        $company = $get;
      } else {
        $company = 'DUIT';
      }
      if($this->input->post('dateOfIssue')!=''){
        $dateOfIssue = $this->input->post('dateOfIssue');
      }else{
        $dateOfIssue = null;
      }
      if($this->input->post('fixedDate')!=''){
        $fixedDate = $this->input->post('fixedDate');
      }else{
        $fixedDate = null;
      }
      if($this->input->post('dueDate')!=''){
        $dueDate = $this->input->post('dueDate');
      }else{
        $dueDate = null;
      }
      if($this->input->post('type')!=''){
        $type = $this->input->post('type');
      }else{
        $type = null;
      }
      if($this->input->post('requisition')!=''){
        $requisition = $this->input->post('requisition');
      }else{
        $requisition = null;
      }
      if($this->input->post('deposit')!=''){
        $deposit = $this->input->post('deposit');
      }else{
        $deposit = null;
      }
      if($this->input->post('withdraw')!=''){
        $withdraw = $this->input->post('withdraw');
      }else{
        $withdraw = null;
      }
      if($this->input->post('endUser')!=''){
        $endUser = $this->input->post('endUser');
      }else{
        $endUser = null;
      }
      if($this->input->post('bankType')!=''){
        $bankType = $this->input->post('bankType');
      }else{
        $bankType = null;
      }
      if($this->input->post('customer')!=''){
        $customer = $this->input->post('customer');
      }else{
        $customer = null;
      }
      if($this->input->post('breakdown')!=''){
        $breakdown = $this->input->post('breakdown');
      }else{
        $breakdown = null;
      }

      $this->load->model('STC_Fundreporting');
      $data = array(
        'dateOfIssue' => $dateOfIssue,
        'fixedDate' => $fixedDate,
        'dueDate' => $dueDate,
        'type' => $type,
        'bankType' => $bankType,
        'customer' => $customer,
        'endUser' => $endUser,
        'breakdown' => $breakdown,
        'requisition' => $requisition,
        'deposit' => $deposit,
        'withdraw' => $withdraw,
        'company' => $company,
      );
    $insertResult = $this->STC_Fundreporting->insert($data);
    $bankBookUpdateResult = $this->STC_Fundreporting->bankbookupdate($company);
    if ($insertResult=='true' && $bankBookUpdateResult == 'true'){
      echo json_encode("true");
    } else {
      echo json_encode("false");
    }

    }

    function insertbankbook(){
      $get = $this->input->get('company');
      if($get){
        $company = $get;
      } else {
        $company = 'DUIT';
      }
      $insertType = $this->input->post('insertType');
      $insertBank= $this->input->post('insertBank');
      if($this->input->post('insertBankType') != ''){
        $insertBankType = $this->input->post('insertBankType');
      }else{
        $insertBankType = null;
      }
      if($this->input->post('insertAccount') != ''){
        $insertAccount = $this->input->post('insertAccount');
      }else{
        $insertAccount = null;
      }
      $insertBreakdown = $this->input->post('insertBreakdown');
      if($this->input->post('insertBalance')!=null){
        $insertBalance = $this->input->post('insertBalance');
      }else{
        $insertBalance = '0';
      }
      $this->load->model('STC_Fundreporting');
      $data = array(
        'type' => $insertType,
        'bank' => $insertBank,
        'banktype' => $insertBankType,
        'account' => $insertAccount,
        'breakdown' => $insertBreakdown,
        'balance' => $insertBalance,
        'company' => $company,
      );
    $result = $this->STC_Fundreporting->insertbankbook($data);
    echo json_encode($result);
    }

    function updatebankbook(){
      $get = $this->input->get('company');
      if($get){
        $company = $get;
      } else {
        $company = 'DUIT';
      }
      $updateIdx = $this->input->post('updateIdx');
      $updateType = $this->input->post('updateType');
      $updateBank= $this->input->post('updateBank');
      if($this->input->post('updateBankType') != ''){
        $updateBankType = $this->input->post('updateBankType');
      }else{
        $updateBankType = null;
      }
      if($this->input->post('updateAccount')){
        $updateAccount = $this->input->post('updateAccount');
      }else{
        $updateAccount =null;
      }
      $updateBreakdown = $this->input->post('updateBreakdown');
      $updateBalance = $this->input->post('updateBalance');

      $this->load->model('STC_Fundreporting');
      $data = array(
        'type' => $updateType,
        'bank' => $updateBank,
        'banktype' => $updateBankType,
        'account' => $updateAccount,
        'breakdown' => $updateBreakdown,
        'balance' =>$updateBalance,
        'company' => $company,
        'modifydate' => date("Y-m-d h:i:s")
      );
    $result = $this->STC_Fundreporting->updatebankbook($data,$updateIdx);
    echo json_encode($result);
    }

    function deletebankbook(){
        $delBank = $this->input->post('delBankIdx');
        $this->load->model('STC_Fundreporting');

        $data = array(
          'idx' => $delBank
        );
        $result = $this->STC_Fundreporting->deletebankbook($data);
        echo json_encode($result);
      }


      function search(){
  $get = $this->input->get('company');
  if($get){
    $company = $get;
  } else {
    $company = 'DUIT';
  }

        $this->load->model('STC_Fundreporting');
        $this->load->library('pagination');


        //검색 키워드
        if($this->input->post('submit')){
          $data['selectDate'] = $this->input->post('selectDate');
          $data['fromDate'] = $this->input->post('fromDate');
          $data['toDate'] = $this->input->post('toDate');
          $data['search1'] = $this->input->post('search1');
          $data['keyword1'] = $this->input->post('keyword1');
          $data['search2'] = $this->input->post('search2');
          $data['keyword2'] = $this->input->post('keyword2');
        //페이징시 submit 입력 값 유지위해 세션처리
          $sessionData = array(
            'selectDate' => $data['selectDate'],
            'fromDate' => $data['fromDate'],
            'toDate' => $data['toDate'],
            'search1' => $data['search1'],
            'keyword1' => $data['keyword1'],
            'search2' => $data['search2'],
            'keyword2' => $data['keyword2']
          );
          $this->session->set_userdata($sessionData);
          }
          else{
            $data['selectDate'] =  $this->session->userdata['selectDate'];
            $data['fromDate'] =  $this->session->userdata['fromDate'];
            $data['toDate'] =  $this->session->userdata['toDate'];
            $data['search1'] =  $this->session->userdata['search1'];
            $data['keyword1'] =  $this->session->userdata['keyword1'];
            $data['search2'] =  $this->session->userdata['search2'];
            $data['keyword2'] =  $this->session->userdata['keyword2'];
            // $data['fromDate'] = null;
            // $data['toDate'] = null;
            // $data['keyword1'] = null;
            // $data['keyword2'] = null;
          };
          // echo $this->input->post('fromDate');
          // echo $this->input->post('toDate');
          // echo $this->input->post('keyword1');
// $data['list'] = $this->STC_Fundreporting->seachlist($data['selectDate'], $data['fromDate'], $data['toDate'], $data['search1'], $data['keyword1'], $data['search2'], $data['keyword2']
        $list = $this->STC_Fundreporting->seachlist($data['selectDate'], $data['fromDate'], $data['toDate'], $data['search1'], $data['keyword1'], $data['search2'], $data['keyword2'], $company);

        $data['fromDate'] = $list['fromDate'];
        $data['toDate'] = $list['toDate'];
//페이징
        $config['base_url'] = 'http:///sales.durianit.co.kr/index.php/fundreporting/search/page/';
        $config['total_rows'] = $list['num_rows'];
        // echo "수는".$config['total_rows'];
        $data['total_rows'] = $config['total_rows'];
        $config['per_page'] = 100;
        $config['uri_segment'] = 4;
        $config['num_links'] = 9;
        // $config['use_page_numbers'] = TRUE;
        $config['first_link'] = '처음';
        $config['last_link'] = '끝';
        $getUrl = '?company='.$company;
      $config['suffix'] = $getUrl;
      $config['first_url'] = '1'.$getUrl;
        $this->pagination->initialize($config);
        $page = $this->uri->segment(4,1);
          if($page > 1){
                $start = (($page / $config['per_page'])) * $config['per_page'];
          } else {
                $start = ($page - 1) * $config['per_page'];
          };
          $lastPage = ceil($config['total_rows'] / $config['per_page']);
        $limit = $config['per_page'];


        $data['pagination'] = $this->pagination->create_links();
        // $lists = $this->STC_Fundreporting->seachlist($data['selectDate'], $data['fromDate'], $data['toDate'], $data['search1'], $data['keyword1'], $data['search2'], $data['keyword2'], $start, $limit);
        $data['bankBook'] = $this->STC_Fundreporting->bankbook($company);
        // $list = $this->STC_Fundreporting->seachlist($data['selectDate'], $data['fromDate'], $data['toDate'], $data['search1'], $data['keyword1'], $data['search2'], $data['keyword2']);
        $data['list'] = $this->STC_Fundreporting->searchpaging($data['selectDate'], $data['fromDate'], $data['toDate'], $data['search1'], $data['keyword1'], $data['search2'], $data['keyword2'], $start, $limit,$company);
        if($config['total_rows']<100){
          $data['pagingBalance'] = 0;
        } else if($page == ($lastPage-1)*100){
          $data['pagingBalance'] = 0;
        } else if($page==1){
          $limit = $config['total_rows'] - $config['per_page'];
          $data['pagingBalance'] = $this->STC_Fundreporting->pagingbalance($limit,$company);
        } else {
          $limit = $config['total_rows'] - ($page + $config['per_page']);
          $data['pagingBalance'] = $this->STC_Fundreporting->pagingbalance($limit,$company);
        }
        // $data['row'] = $lists['row'];
        // echo "검색건수는 ".$data['row'];
        $data['bond'] = $this->STC_Fundreporting->bond($company);
        $data['debt'] = $this->STC_Fundreporting->debt($company);
        $data['selectBanklist'] = $this->STC_Fundreporting->selectbankbook($company);
        $data['selectBankTypeList'] = $this->STC_Fundreporting->selectbanktypelist($company);
        // $data['selectLoanBanklist']= $this->STC_Fundreporting->selectLoanAccount($company);
        // $data['selectSaveBanklist']= $this->STC_Fundreporting->selectSaveAccount($company);
        // $data['selectDepositBanklist']= $this->STC_Fundreporting->selectDepositAccount($company);

        $data['sumDeposit'] = $list['sumDeposit'];
        $data['sumWithdraw'] = $list['sumWithdraw'];
        $data['nsDeposit'] = $list['nsDeposit'];
        $data['nsWithdraw'] = $list['nsWithdraw'];
        $this->load->view('fundRepoting_search', $data);

      }


}
 ?>
