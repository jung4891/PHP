<?php
header("Content-type: text/html; charset=utf-8");

class STC_weekly_report extends CI_Model {
    function __construct() {
        parent::__construct();
        $this->user_id = $this->phpsession->get( 'id', 'stc' );
    }

    function weekly_report_insert($data) {
        $check_sql = "SELECT * FROM weekly_report WHERE year ='{$data['year']}' and month ='{$data['month']}' AND week ='{$data['week']}' AND group_name ='{$data['group_name']}'";
        $query = $this->db->query( $check_sql );

        if ($query->num_rows() <= 0){
            return $this->db->insert('weekly_report', $data );
        }else{
            return false;
        }
    }

    function weekly_report_list( $searchkeyword,$search_keyword2, $search1, $start_limit = 0, $offset = 0) {
        $keyword = $searchkeyword;
        $tmp="";

        if($searchkeyword != "") {
                if($search1 == "001") {
                        $searchstring = " where group_name like '%{$keyword}%' "; //  수정포인트 -작업명
                } else if($search1 == "002" ) {
                        $searchstring = " where month like '%{$keyword}%' and week like '%{$search_keyword2}%'"; 
        $keyword = substr($searchkeyword,8,2);
                } else if($search1 == "003" ) {
                        $searchstring = " where writer like '%{$keyword}%' "; //  수정포인트 - 작성자
                } 
        } else {
                $searchstring = "";
        }

        $sql = "select * from weekly_report".$searchstring." order by seq desc"; //  수정포인트

        if  ( $offset <> 0 )
            $sql = $sql." limit ?, ?";

        if  ( $searchkeyword != "" )
            $query = $this->db->query( $sql, array($start_limit, $offset ) );
    
        else
            $query = $this->db->query( $sql, array( $start_limit, $offset ) );

        return array( 'count' => $query->num_rows(), 'data' => $query->result_array() );
    }

    function weekly_report_list_count( $searchkeyword,$search_keyword2, $search1, $start_limit = 0, $offset = 0) {
        $keyword = $searchkeyword;
        $tmp="";

        if($searchkeyword != "") {
                if($search1 == "001") {
                        $searchstring = " where group_name like '%{$keyword}%'"; //  수정포인트 -작업명
                } else if($search1 == "002" ) {
                        // $searchstring = " where s_date like '".substr($searchkeyword,0,7)."%' and week = '{$keyword}'"; //  수정포인트 - 고객사
                        $searchstring = " where month like '%{$keyword}%' and week like '%{$search_keyword2}%'"; 
        $keyword=substr($searchkeyword,8,2);
                } else if($search1 == "003" ) {
                        $searchstring = " where writer like '%{$keyword}%'"; //  수정포인트 - 작성자
                } 

        } else {
                $searchstring = "";
        }

        $sql = "select count(seq) as ucount from weekly_report".$searchstring." order by seq desc"; //  수정포인트

        if  ( $searchkeyword != "" )
            $query = $this->db->query( $sql);
        else
            $query = $this->db->query( $sql );

        return $query->row();
    }

    //주간업무보고
    function weekly_report_view( $seq  ) {
        $sql = "select * from weekly_report where seq = ?";
        $query = $this->db->query( $sql, $seq );

        if ($query->num_rows() <= 0) {
                return false;
        } else {
                return $query->row_array() ;
        }
    }

    // //기술본부로 선택했을때
    // function tech_weekly_report_view( $seq,$s_date,$e_date) {
    //     $sql = "SELECT seq from weekly_report WHERE s_date ='{$s_date}' AND e_date='{$e_date}' AND seq != {$seq}";
    //     $query = $this->db->query( $sql, $seq );

    //     if ($query->num_rows() <= 0) {
    //             return false;
    //     } else {
    //             return $query->result_array() ;
    //     }
    // }

    //주간업무보고 금주 
    function weekly_report_doc_view($seq){
        $sql = "select * from weekly_report_doc where report_seq in ({$seq}) order by income_time";

        $query = $this->db->query($sql);

        if ($query->num_rows() <= 0) {
            return false;
        } else {
            return $query->result_array() ;
        }
    }

    //주간업무보고 차주
    function next_weekly_report_doc_view($seq){
        $sql = "select * from next_weekly_report_doc where report_seq in ({$seq}) order by income_time";

        $query = $this->db->query($sql);

        if ($query->num_rows() <= 0) {
                return false;
        } else {
                return $query->result_array() ;
        }
    }

    //주간업무보고 금주 총 수
    function weekly_report_doc_total($seq){

        $sql = "select count(*) as sum from weekly_report_doc where report_seq in({$seq})";

        $query = $this->db->query($sql);

        
        if ($query->num_rows() <= 0) {
                return false;
        } else {
                return $query->result_array() ;
        }

    }
    

    //주간업무보고 차주 총 수
    function next_weekly_report_doc_total($seq){
        $sql = "select count(*) as sum from next_weekly_report_doc where report_seq in({$seq})";

        $query = $this->db->query($sql);

        if ($query->num_rows() <= 0) {
                return false;
        } else {
                return $query->result_array() ;
        }
    }

    //주간업무보고 금주 work_name 갯수
    function weekly_report_doc_count($seq,$year,$month,$group){
        if($group != "기술본부"){
            $sql ="SELECT tdb.cnt AS month_cnt,wrd.work_name,wrd.cnt FROM (SELECT COUNT(*) AS cnt,t.work_name FROM tech_doc_basic as t join user as u on t.writer=u.user_name WHERE income_time BETWEEN '{$year}-{$month}-01 00:00:00' AND '{$year}-{$month}-31 11:59:59' and u.user_group='{$group}' GROUP BY work_name) AS tdb 
            right JOIN (select t1.work_name,t2.cnt from work_name_config as t1 left join (select work_name, count(*) as cnt from weekly_report_doc WHERE report_seq IN ({$seq}) group by work_name) as t2  on  t1.work_name=t2.work_name) AS wrd ON tdb.work_name = wrd.work_name;";
        }else{ 
            $sql ="SELECT tdb.cnt AS month_cnt,wrd.work_name,wrd.cnt FROM (SELECT COUNT(*) AS cnt,work_name FROM tech_doc_basic WHERE income_time BETWEEN '{$year}-{$month}-01 00:00:00' AND '{$year}-{$month}-31 11:59:59' GROUP BY work_name) AS tdb 
            right JOIN (select t1.work_name,t2.cnt from work_name_config as t1 left join (select work_name, count(*) as cnt from weekly_report_doc WHERE report_seq IN ({$seq}) group by work_name) as t2  on  t1.work_name=t2.work_name) AS wrd ON tdb.work_name = wrd.work_name;";      
        }

        $query = $this->db->query($sql);
    
        if ($query->num_rows() <= 0) {
            return false;
        } else {
            return $query->result_array() ;
        }
        
    }
    
    //주간업무보고 차주 work_name 갯수
    function next_weekly_report_doc_count($seq){
        $sql = "select t1.work_name,t2.cnt from work_name_config as t1 left join (select work_name, count(*) as cnt from next_weekly_report_doc WHERE report_seq IN ({$seq}) group by work_name) as t2  on  t1.work_name=t2.work_name";

        $query = $this->db->query($sql);

        if ($query->num_rows() <= 0) {
                return false;
        } else {
                return $query->result_array() ;
        }
        
    }


    function weekly_report_doc_insert($group,$year,$month,$week,$s_date,$e_date){
        $tmp_s_date = $s_date." 00:00:00";
        $tmp_e_date = $e_date." 23:59:59";

        $report_seq_sql = "SELECT seq from weekly_report order BY seq desc limit 1";
        $report_seq_query = $this->db->query( $report_seq_sql );
        $report_seq = $report_seq_query->row_array();

        if($group == '기술본부' ){
            $sql1 = "insert into weekly_report_doc (report_seq,tech_seq,group_name,work_name,produce,year,month,week,type,customer,subject,result,writer,income_time,insert_time)
            SELECT (select seq from weekly_report order by seq desc limit 1) AS report_seq ,tech_seq AS tech_seq,
            group_name AS group_name ,
            work_name AS work_name ,
            produce AS produce,
            year AS year,
            month AS month ,
            week AS week, 
            type AS type,
            customer AS customer,
            subject AS subject ,
            result AS result,
            writer AS writer,
            income_time AS income_time,
            NOW() AS insert_time
            FROM weekly_report_doc WHERE YEAR =? and MONTH=? and WEEK=? group BY tech_seq order by seq;";

            $query = $this->db->query($sql1,array($year,$month,$week));

            $sql2 = "insert into next_weekly_report_doc (report_seq,group_name,work_name,produce,year,month,week,type,customer,subject,preparations,writer,income_time,insert_time)
            SELECT (select seq from weekly_report order by seq desc limit 1) AS report_seq ,
            group_name AS group_name ,
            work_name AS work_name ,
            produce AS produce,
            year AS year,
            month AS month ,
            week AS week, 
            type AS type,
            customer AS customer,
            subject AS subject ,
            preparations AS preparations ,
            writer AS writer,
            income_time AS income_time,
            NOW() AS insert_time
            FROM next_weekly_report_doc WHERE YEAR =? and MONTH=? and WEEK=? order by seq;";
            $query = $this->db->query($sql2,array($year,$month,$week));

            // $sql = "insert into weekly_report_doc (report_seq,tech_seq,group_name,work_name,produce,year,month,week,type,customer,subject,writer,income_time,insert_time) 
            // select (select seq from weekly_report order by seq desc limit 1) as report_seq,tech.seq, ? as group_name ,tech.work_name, tech.produce, ? as year, ? as month , ? as week , '0' as type, tech.customer, tech.subject, tech.engineer, tech.income_time ,sysdate() as insert_time 
            // from tech_doc_basic AS tech where income_time >= ? and income_time <= ? AND engineer REGEXP (SELECT replace(GROUP_CONCAT(user_name),',','|') AS NAME FROM user WHERE user_group=?) and engineer not like '%,%'  order by income_time DESC";
        
            $doc_cnt_sql = "SELECT COUNT(*) as cnt FROM tech_doc_basic where income_time >= '{$tmp_s_date}' and income_time <= '{$tmp_e_date}' AND engineer REGEXP (SELECT replace(GROUP_CONCAT(user_name),',','|') AS NAME FROM user WHERE user_group = '{$group}') and engineer not like '%,%' order by income_time DESC";
            $doc_cnt_query = $this->db->query( $doc_cnt_sql );
            $doc_cnt = $doc_cnt_query->row_array();

            $sql ="call insert_weekly_report_doc({$doc_cnt['cnt']},'{$group}','{$tmp_s_date}','{$tmp_e_date}',{$year},{$month},{$week},{$report_seq['seq']},2)";
            $query = $this->db->query($sql);
        

        }else{
            //주간업무 기술본부 있나 체크
            $check_sql = "select * from weekly_report where year='{$year}' and month='{$month}' and week='{$week}' and group_name='기술본부'";
            $check_query = $this->db->query( $check_sql );

            $doc_cnt_sql = "SELECT COUNT(*) as cnt FROM tech_doc_basic where income_time >= '{$tmp_s_date}' and income_time <= '{$tmp_e_date}' AND engineer REGEXP (SELECT replace(GROUP_CONCAT(user_name),',','|') AS NAME FROM user WHERE user_group = '{$group}') order by income_time DESC";
            $doc_cnt_query = $this->db->query( $doc_cnt_sql );
            $doc_cnt = $doc_cnt_query->row_array();

            $sql ="call insert_weekly_report_doc({$doc_cnt['cnt']},'{$group}','{$tmp_s_date}','{$tmp_e_date}',{$year},{$month},{$week},{$report_seq['seq']},1)";
            $query = $this->db->query($sql);

            //기술본부 있을때 기술본부에도 추가 (tech_seq 겹치면 안넣어줭)
            if ($check_query->num_rows() > 0 && $query){
                $weekly_report_tech = $check_query->row_array();
                // $sql2 = "insert into weekly_report_doc (report_seq,tech_seq,group_name,work_name,produce,year,month,week,type,customer,subject,writer,income_time,insert_time) 
                // select {$weekly_report_tech['seq']} as report_seq,tech.seq, ? as group_name ,tech.work_name, tech.produce, ? as year, ? as month , ? as week , '0' as type, tech.customer, tech.subject, tech.engineer, tech.income_time,sysdate() as insert_time 
                // from tech_doc_basic AS tech where income_time >= ? and income_time <= ? AND engineer REGEXP (SELECT replace(GROUP_CONCAT(user_name),',','|') AS NAME FROM user WHERE user_group=?)
                // AND (SELECT COUNT(*) from weekly_report_doc WHERE tech_seq = tech.seq and report_seq = {$weekly_report_tech['seq']}) = 0 
                // order by income_time DESC";
                $sql2 ="call insert_weekly_report_doc({$doc_cnt['cnt']},'{$group}','{$tmp_s_date}','{$tmp_e_date}',{$year},{$month},{$week},{$weekly_report_tech['seq']},2)";
                $query = $this->db->query($sql2);
            }
        }
        return $query;
    }


    function weekly_report_doc_modify($data, $mode) {
        if ($mode == 1) {
            $result=$this->db->update('weekly_report_doc', $data, array('seq' => $data['seq']));
        } else if ($mode == 0) {
        }
        return $result;
    }

    function next_weekly_report_doc_modify($data, $mode) {
        if ($mode == 1) {
            $result=$this->db->update('next_weekly_report_doc', $data, array('seq' => $data['seq']));
        } else if ($mode == 0) {
            $result=$this->db->insert('next_weekly_report_doc', $data);

            $sql = "SELECT wr.seq , wr.group_name from weekly_report wr JOIN (SELECT * FROM next_weekly_report_doc ORDER BY seq DESC LIMIT 1) nwrd
            ON wr.year = nwrd.year AND wr.month = nwrd.month AND wr.week = nwrd.week
            WHERE wr.group_name = '기술본부' AND nwrd.group_name <> '기술본부'";

            $query = $this->db->query($sql);
            
            if ($query->num_rows() <= 0) {
                return $result;
            } else {
                $add_report = $query->row_array();
                $sql1 = "insert into next_weekly_report_doc(report_seq,group_name,year,month,week,work_name,produce,customer,subject,preparations,writer,income_time,insert_time)
                values ({$add_report['seq']},'{$add_report['group_name']}','{$data['year']}','{$data['month']}','{$data['week']}','{$data['work_name']}','{$data['produce']}','{$data['customer']}','{$data['subject']}','{$data['preparations']}','{$data['writer']}','{$data['income_time']}',now())";
                $result = $this->db->query($sql1);
            }

        }
        return $result;
    }

    //주간업무보고 코멘트 update
    function weekly_report_comment_modify($seq,$comment){
        $sql = "update weekly_report set comment='{$comment}' where seq = {$seq}";
        return $this->db->query($sql);
    }

    //금주,차주 doc delete
    function weekly_report_doc_delete($seq,$type){
        if($type == "current"){
            $sql = "delete from weekly_report_doc where seq = {$seq}";
        }else{
            $sql = "delete from next_weekly_report_doc where seq = {$seq}";
        }
        $this->db->query($sql);
    }

    //주간보고업무 삭제    
    function weekly_report_delete( $seq ) {
        $sql = "delete from weekly_report where seq = ?";
        $query = $this->db->query( $sql, $seq );
        $sql = "delete from weekly_report_doc where report_seq = ?";
        $query = $this->db->query( $sql, $seq );
        $sql = "delete from next_weekly_report_doc where report_seq = ?";
        $query = $this->db->query( $sql, $seq );

        return  $query;
    }
        
    //상위 그룹에 맞는 하위그룹 가져오기
    function childGroup($parentGroup){
        $sql = "select * from user_group where parentGroupName='{$parentGroup}' and groupName<>'{$parentGroup}'";
        $query = $this->db->query( $sql );

        if ($query->num_rows() <= 0) {
            return false;
        } else {
            return $query->result_array();
        }
    }

    //기술지원부 그룹 가져오기
    function techGroup(){
        $sql = "select * from user_group where parentGroupName='기술본부' and groupName<>'기술연구소' order by seq;";
        $query = $this->db->query( $sql );

        if ($query->num_rows() <= 0) {
            return false;
        } else {
            return $query->result_array();
        }
    }


    //작업명 가져오기
    function work_name_config(){
        $sql = "select * from work_name_config";
        $query = $this->db->query( $sql );

        if ($query->num_rows() <= 0) {
            return false;
        } else {
            return $query->result_array();
        }

    }

    //고객사 가져와
    function get_customer(){
        $sql = "select seq as forcasting_seq, customer_companyname as customer FROM sales_forcasting  GROUP BY customer order by binary(customer)";
        $query = $this->db->query($sql);
		return $query->result_array();
    }
}
?>
