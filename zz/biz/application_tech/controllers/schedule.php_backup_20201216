<?php

class Schedule extends CI_Controller {

  function __construct(){
    parent::__construct();

    $this->id = $this->phpsession->get( 'id', 'stc' );
    $this->name = $this->phpsession->get( 'name', 'stc' );
    $this->lv = $this->phpsession->get( 'lv', 'stc' );
    $this->cnum = $this->phpsession->get( 'cnum', 'stc' );
    $this->group = $this->phpsession->get( 'group', 'stc' );
    $this->pGroupName = $this->phpsession->get( 'pGroupName', 'stc' );
    $this->company = $this->phpsession->get( 'company', 'stc' );
    $this->load->database();
    ob_start();
    $config['url_suffix'] = 'html';
    // $this->load->Model('stc_schedule');
    $this->load->Model(array('STC_User', 'STC_Common', 'stc_schedule'));
    $this->load->helper('url');

  }
  //일정 페이지 메인화면 출력

  function tech_schedule(){
    if( $this->id === null ) {
      redirect( 'account' );
    }
    $pGroupName =  $this->pGroupName;
    $group = $this->group;
    //패치 전 수정
    if($pGroupName != '기술본부'){
      echo "<script>alert('접근할수 없는 메뉴입니다.');location.href='".site_url()."';</script>";
    }
    // $this->output->enable_profiler(TRUE);

    $participant = $this->name;

    $data['events'] = $this->stc_schedule->schedule_list($participant);

    $data['report'] = $this->stc_schedule->weekly_report_list();
    $data['customer'] = $this->stc_schedule->customer_list();
    // $data['color'] = $result["color"];
    // $data['textColor'] = $result["textColor"];
//////////////////KI
    $data['session_id'] = $this->id;
    $data['parentGroup'] = $this->stc_schedule->parentGroup();
    $data['user_group'] = $this->stc_schedule->user_group();
    $data['userInfo'] = $this->stc_schedule->userInfo();
    $data['userDepth'] = $this->stc_schedule->userDepth();
    $data['work_color'] = $this->stc_schedule->work_color_list();
    $data['work_name'] = $this->stc_schedule->group_list();

    $this->load->view('tech_schedule', $data);

  }

// BH
  function modify(){
    //수정 요청이 있을 시
    if($this->input->post('updateSubmit')){
      $seq = $this->input->post('seq');
      $startDay = $this->input->post('startDay');
      $startTime = $this->input->post('startTime');
      $endDay = $this->input->post('endDay');
      $endTime = $this->input->post('endTime');
      $workname = $this->input->post('workname');
      $customer = $this->input->post('customer');
      $supportMethod = $this->input->post('supportMethod');
      $participant = $this->input->post('participant');
      $contents = $this->input->post('contents');
      $modifyDay = date("Y-m-d H:i:s");

      $data = array(
        'seq' => $seq,
        'start_day' => $startDay,
        'start_time' => $startTime,
        'end_day' => $endDay,
        'end_time' => $endTime,
        'work_name' => $workname,
        'customer' => $customer,
        'support_method' => $supportMethod,
        'participant' => $participant,
        'contents' => $contents,
        'user_id' => $this->id,
        'user_name' => $this->name,
        'modify_date' => $modifyDay
      );
      $this->stc_schedule->schedule_update($data);
      redirect("/schedule/tech_schedule", "refresh") ;
    // 삭제요청이 있을시
    }elseif ($this->input->post('delSubmit')) {
        $seq = $this->input->post('seq');
        $this->stc_schedule->schedule_delete($seq);
        redirect("/schedule/tech_schedule", "refresh") ;

    }
  }


// BH 일정 추가
  function add_schedule(){
    $this->output->enable_profiler(TRUE);


      $startDay = $this->input->post('startDay');
      $startTime = $this->input->post('startTime');
      $endDay = $this->input->post('endDay');
      $endTime = $this->input->post('endTime');
      $workname = $this->input->post('workname');
      $customer = $this->input->post('customer');
      $supportMethod = $this->input->post('supportMethod');
      $participant = $this->input->post('participant');
      $contents = $this->input->post('contents');
      $curday = date("Y-m-d");

      $this->load->model('stc_schedule');
      $data = array(
        'start_day' => $startDay,
        'start_time' => $startTime,
        'end_day' => $endDay,
        'end_time' => $endTime,
        'work_name' => $workname,
        'customer' => $customer,
        'support_method' => $supportMethod,
        'participant'=> $participant,
        'contents' => $contents,
        'user_id' => $this->id,
        'user_name' => $this->name
      );
      $this->stc_schedule->schedule_insert($data);
      // $this->load->view('tech_schedule');
      redirect("/schedule/tech_schedule", "refresh") ;
  }

// BH 일정 상세보기
function tech_schedule_detail(){
  if( $this->id === null ) {
      redirect( 'account' );
    }
    $pGroupName =  $this->pGroupName;
    $group = $this->group;
    //패치 전 수정
    if($pGroupName != '기술본부'){
      echo "<script>alert('접근할수 없는 메뉴입니다.');location.href='".site_url()."';</script>";
    }
  $this->output->enable_profiler(TRUE);
  $seq = $this->input->post('hiddenSeq');
  $this->load->Model('stc_schedule');
  $data['details'] = $this->stc_schedule->details($seq);
  $data['customer'] = $this->stc_schedule->customer_list();
  // $result = $this->stc_schedule->group_list();
  $data['work_name'] = $this->stc_schedule->group_list();
  //////////////////KI
  $data['parentGroup'] = $this->stc_schedule->parentGroup();
  $data['user_group'] = $this->stc_schedule->user_group();
  $data['userInfo'] = $this->stc_schedule->userInfo();
  $data['userDepth'] = $this->stc_schedule->userDepth();

  $this->load->view('tech_schedule_detail', $data);

}

// BH 일정 드래그시 날짜 업데이트
  function drop_update(){
    $seq = $this->input->post("seq");
    $start_day = $this->input->post("start_day");
    $start_time = $this->input->post("start_time");
    $end_day = $this->input->post("end_day");
    $end_time = $this->input->post("end_time");
    $modifyDay = date("Y-m-d H:i:s");
    $data = array(
      'seq' => $seq,
      'start_day' => $start_day,
      'start_time' => $start_time,
      'end_day' => $end_day,
      'end_time' => $end_time,
      'user_id' => $this->id,
      'modify_date' => $modifyDay
    );
    $result = $this->stc_schedule->schedule_update($data);
    echo "OK";
  }

  // KI 유저DB에 조회할 대상 입력
function user333(){
  $this->output->enable_profiler(TRUE);
////////////BH
    $data['events2'] = array();

    $result = $this->stc_schedule->group_list();
    $len = $result["len"];
    // $result = $this->stc_schedule->selectUser($this->name);
    // $user_schecdule = $result["user_schecdule"];
    for ($i=0; $i <= $len-1 ; $i++) {
      $user['work_name'] = $result["work_list"][$i]->work_name;
      $userArr = $_POST['userArr'];
      // echo $userArr;
      // var_dump($userArr);
      $user['participant'] = $userArr;
      // $user['user_name'] = $this->name;
      $event = $this->stc_schedule->schedule_list($user);
      // var_dump($event);
      array_push($data['events2'], $event);
  }
  $data['report'] = $this->stc_schedule->weekly_report_list();
  $data['customer'] = $this->stc_schedule->customer_list();
  $data['work_name'] = $result["work_list"];

  $data['parentGroup'] = $this->stc_schedule->parentGroup();
  $data['user_group'] = $this->stc_schedule->user_group();
  $data['userInfo'] = $this->stc_schedule->userInfo();
  $data['userDepth'] = $this->stc_schedule->userDepth();

  // $this->load->view('tech_schedule', $data);
  return $event;
}

function user(){
  $result_obj = new stdClass();
  // $data['events'] = array();

  $params = $this->input->post('userArr');
  $param_flag = isset($params) && !empty($params);


    $userArr = $_POST['userArr'];
    $user['participant'] = $userArr;
    $data['events'] = $this->stc_schedule->schedule_list_user($user);



  echo json_encode($data['events']);
}

function colorChange() {
  // $data
}

  function updateWorkColor(){
    $seq = $this->input->post('seq');
    $data['color'] = $this->input->post('color');
    $data['textColor'] = $this->input->post('textColor');

    $updateResult = $this->stc_schedule->updateWorkColor($data, $seq);

    if($updateResult == 'true'){
      echo json_encode("true");
    } else {
      echo json_encode("false");
    }
  }



}


 ?>
