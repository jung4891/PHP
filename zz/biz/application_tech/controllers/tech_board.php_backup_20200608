<?php
error_reporting(E_ALL);
header("Content-type: text/html; charset=utf-8");

class Tech_board extends CI_Controller {
    var $id = '';

    function __construct() {
        parent::__construct();
        $this->id = $this->phpsession->get( 'id', 'stc' );
        $this->customerid = $this->phpsession->get( 'customerid', 'stc' );
        $this->name = $this->phpsession->get( 'name', 'stc' );
        $this->lv = $this->phpsession->get( 'lv', 'stc' );
        $this->company = $this->phpsession->get( 'company', 'stc' );
        $this->email = $this->phpsession->get('email','stc'); //김수성추가
        $this->load->helper('form');
        $this->load->helper('url');
    }
        // 기술지원보고서 용
        //
    function tech_report_csv(){

        if( $this->id === null ) {
            redirect( 'account' );
        }

        $this->load->Model('STC_tech_doc');

        $seq = $this->input->get( 'seq' );
        $send_ck = $this->input->get( 'send_ck' );
        if($send_ck=='Y'){
                $mail_send = $this->input->get( 'mail_send' );
                $this->STC_tech_doc->tech_mail_send($mail_send,$seq);
        }else{
                $send_ck = "";
                $manager_mail = "";
        }
        $data['view_val'] = $this->STC_tech_doc->tech_doc_view($seq);
	    $this->load->view('tech_report_csv',$data);

    }
    //다중 전송할 때(정기점검2)
    function tech_report2_csv(){
        if( $this->id === null ) {
            redirect( 'account' );
        }
        $this->load->Model('STC_tech_doc');

        $mailInfo = $this->input->get( 'mail_send' );
        $mailInfo = base64_decode($mailInfo);
        $mailInfo = explode('/',$mailInfo);
        $seq = '';
        for($i=0; $i<count($mailInfo); $i++){
            $eachMail= explode('-',$mailInfo[$i]);
            $seq = $seq.','.$eachMail[0];
        }
        $seq = substr($seq,1);

        $mail_send = 'Y';
        $this->STC_tech_doc->tech_mail_send($mail_send,$seq);
    
        $data['view_val'] = $this->STC_tech_doc->tech_doc_view($seq);
        $this->load->view('tech_report2_csv',$data);
    }

    function custom_view(){

	    $this->load->view('custom_view');

    }

    function tech_doc_list() {
        if( $this->id === null ) {
            redirect( 'account' );
        }

        $this->load->Model(array('STC_tech_doc'));
        if(isset($_GET['cur_page'])) {
            $cur_page = $_GET['cur_page'];
        }
        else {
            $cur_page = 0;
                }                                                                                                               //      현재 페이지

        $no_page_list = 10;                                                                             //      한페이지에 나타나는 목록 개수

        if(isset($_GET['searchkeyword'])) {
            $search_keyword = $_GET['searchkeyword'];
        }
        else {
            $search_keyword = "";
        }
        if(isset($_GET['searchkeyword2'])) {
            $search_keyword2 = $_GET['searchkeyword2'];
        }
        else {
            $search_keyword2 = "";
        }

        if(isset($_GET['search1'])) {
            $search1 = $_GET['search1'];
        }
        else {
            $search1 = "";
        }
        //체크한 seq,mailaddr
        if(isset($_GET['mail_send'])) {
            $mail_send = $_GET['mail_send'];
        }
        else {
            $mail_send = "";
        }
        
        //체크한 고객사 가져올려고 
        if(isset($_GET['seq'])) {
            $seq = $_GET['seq'];
        }
        else {
            $seq = "";
        }

        $data['search_keyword'] = $search_keyword;
        $data['search_keyword2'] = $search_keyword2;
        $data['search1'] = $search1;
        $data['mail_send']=$mail_send;
        $data['seq']=$seq;
        if  ( $cur_page <= 0 )
            $cur_page = 1;
        $data['cur_page'] = $cur_page;

        $user_list_data = $this->STC_tech_doc->tech_doc_list($search_keyword,$search_keyword2, $search1, ( $cur_page - 1 ) * $no_page_list, $no_page_list);
        $data['count'] = $this->STC_tech_doc->tech_doc_list_count($search_keyword, $search_keyword2, $search1)->ucount;
        $data['list_val'] = $user_list_data['data'];
        $data['list_val_count'] = $user_list_data['count'];
        $total_page = 1;
        if  ( $data['count'] % $no_page_list == 0 )
            $total_page = floor( ( $data['count'] / $no_page_list ) );
        else
            $total_page = floor( ( $data['count'] / $no_page_list + 1 ) );                  //      전체 페이지 개수

        $start_page =  floor(($cur_page - 1 ) / 10) * 10  + 1 ;
        $end_page = 0;
        if  ( floor( ( $cur_page - 1 ) / 10 ) < floor( ( $total_page - 1 ) / 10 ) )
            $end_page = ( floor( ( $cur_page - 1 ) / 10 ) + 1 ) * 10;
        else
            $end_page = $total_page;
        $data['no_page_list'] = $no_page_list;
        $data['total_page'] = $total_page;
        $data['start_page'] = $start_page;
        $data['end_page'] = $end_page;
        $this->load->view( 'tech_doc_list', $data );

    }

    function tech_doc_list_test() {
        if( $this->id === null ) {
            redirect( 'account' );
        }

        $this->load->Model(array('STC_tech_doc'));
        if(isset($_GET['cur_page'])) {
            $cur_page = $_GET['cur_page'];
        }
        else {
            $cur_page = 0;
                }                                                                                                               //      현재 페이지

        $no_page_list = 10;                                                                             //      한페이지에 나타나는 목록 개수

        if(isset($_GET['searchkeyword'])) {
            $search_keyword = $_GET['searchkeyword'];
        }
        else {
            $search_keyword = "";
        }

        if(isset($_GET['searchkeyword2'])) {
            $search_keyword = $_GET['searchkeyword2'];
        }
        else {
            $search_keyword2 = "";
        }

        if(isset($_GET['search1'])) {
            $search1 = $_GET['search1'];
        }
        else {
            $search1 = "";
        }

        $data['search_keyword'] = $search_keyword;
        $data['search_keyword2'] = $search_keyword2;
        $data['search1'] = $search1;
        if  ( $cur_page <= 0 )
            $cur_page = 1;
        $data['cur_page'] = $cur_page;

        $user_list_data = $this->STC_tech_doc->tech_doc_list($search_keyword,$search_keyword2 , $search1, ( $cur_page - 1 ) * $no_page_list, $no_page_list);
        $data['count'] = $this->STC_tech_doc->tech_doc_list_count($search_keyword, $search_keyword2, $search1)->ucount;
        $data['list_val'] = $user_list_data['data'];
        $data['list_val_count'] = $user_list_data['count'];
        $total_page = 1;
        if  ( $data['count'] % $no_page_list == 0 )
            $total_page = floor( ( $data['count'] / $no_page_list ) );
        else
            $total_page = floor( ( $data['count'] / $no_page_list + 1 ) );                  //      전체 페이지 개수

        $start_page =  floor(($cur_page - 1 ) / 10) * 10  + 1 ;
        $end_page = 0;
        if  ( floor( ( $cur_page - 1 ) / 10 ) < floor( ( $total_page - 1 ) / 10 ) )
            $end_page = ( floor( ( $cur_page - 1 ) / 10 ) + 1 ) * 10;
        else
            $end_page = $total_page;
        $data['no_page_list'] = $no_page_list;
        $data['total_page'] = $total_page;
        $data['start_page'] = $start_page;
        $data['end_page'] = $end_page;
        $this->load->view( 'tech_doc_list_test', $data );

    }

    // 기술지원보고서 첨부파일 다운로드처리
    function tech_doc_download($seq, $filelcname) {
      $this->load->helper('alert');
      $this->load->helper('download');
      $this->load->Model(array('STC_tech_doc'));

      ini_set('memory_limit', '200M'); // 김수성 수정 2017-01-04

      $fdata = $this->STC_tech_doc->tech_doc_file($seq, $filelcname);
     

      if (!isset($fdata['file_changename'])) {
        alert("파일 정보가 존재하지 않습니다.");
      }

      $data = file_get_contents("/var/www/html/stc/misc/upload/tech/tech/".$fdata['file_changename']);

      if (!force_download(urlencode($fdata['file_realname']), $data)) {
        alert('파일을 찾을 수 없습니다.');
      }
    }

    // 기술지원 보고서 첨부파일 삭제처리
    function tech_doc_filedel($seq, $filelcname) {
      $this->load->helper('alert');
      $this->load->helper('download');
      $this->load->Model('STC_tech_doc');

      $fdata = $this->STC_tech_doc->tech_doc_file($seq, $filelcname);

      if (!isset($fdata['file_changename'])) {
        alert("파일 정보가 존재하지 않습니다.");
      } else {
        $fdata2 = $this->STC_tech_doc->tech_doc_filedel($seq);
        if($fdata2) {
          unlink("/var/www/html/stc/misc/upload/tech/tech/".$fdata['file_changename']);
        }
        alert('파일이 정상적으로 삭제되었습니다.', site_url().'/tech_board/tech_doc_view?seq='.$seq.'&mode=modify');
      }
    }


    function tech_doc_input() {

        if( $this->id === null ) {
            redirect( 'account' );
        }

        $this->load->Model(array('STC_tech_doc'));
        $data['customer'] = $this->STC_tech_doc->get_customer();

     //  var_dump($data['customer'][0]['customer']);

        $this->load->view( 'tech_doc_input', $data );
    }

    function tech_doc_input_test() {

        if( $this->id === null ) {
            redirect( 'account' );
        }

        $this->load->Model(array('STC_tech_doc'));
        $data['customer'] = $this->STC_tech_doc->get_customer();

     //  var_dump($data['customer'][0]['customer']);

        $this->load->view( 'tech_doc_input_test', $data );
    }


    function tech_doc_input_action_test() {


	$test="";
	$count=1;
	$work_name = $_POST['work_name'];
	foreach($work_name as $work_tmp){
		if($count==1){
		$test=$test.$work_tmp;
		$count++;
		}else{
		$test=$test.";".$work_tmp;
		$count++;
		}
	}
echo $test;
/*            if( $this->id === null ) {
             redirect( 'account' );
         }
         $this->load->model(array( 'STC_tech_doc' ));
         $seq = $this->input->post('seq');

         $filename = NULL;
   		   $lcfilename = NULL;

     		 $csize = $_FILES["cfile"]["size"];
     		 $cname = $_FILES["cfile"]["name"];
     		 $ext = substr(strrchr($cname,"."),1);
     		 $ext = strtolower($ext);

            // 문서번호 생성 함수
            //
         $work_date = $this->input->post('income_time');
         $today_month = date("n",strtotime($work_date) );
         $today_year = date("Y",strtotime($work_date) );
         $doc_final = "DUIT-TECH-08-".date("y-m",strtotime($work_date) )."-";
         $doc_last = $this->STC_tech_doc->tech_doc_num_count($today_year,$today_month,$seq);
         $doc_last += 1;
         $doc_final .= sprintf("%03d",$doc_last);

            // work 부분 합 치기
         $work_time_s = $this->input->post('work_time_s');
         $work_time_e = $this->input->post('work_time_e');
         $work_text = $this->input->post('work_text');


         $work_process_time="";
         $work_process="";

         for($i=0;$i<count($work_time_s);$i++){
            $work_process_time .=$work_time_s[$i];
            $work_process_time .="-";
            $work_process_time .= $work_time_e[$i];
            $work_process .=$work_text[$i];

            if($i>=0 and $i<count($work_time_s)){
                $work_process_time .=";;";
                $work_process .=";;";
            }
        }
            // insert / modify 기본 내용

        $s = $this->input->post('start_time');
        $e = $this->input->post('end_time');

        $ss = explode(":", $s);
        $ee = explode(":", $e);

        if($ee[1]<$ss[1]){

            $ee[0]--;
            $ee[1]+=60;

        }

        $results = mktime($ee[0]-$ss[0],$ee[1]-$ss[1],0,0,0,0);

        $total_time = date("H:i",$results);


	if ($csize > 0 && $cname) {
		if ($csize > 104857600) {
			echo "<script>alert('첨부파일의 용량이 초과하였습니다.\\n100MB 이하의 파일을 첨부해주세요.');history.go(-1);</script>"; 
//김수성 수정 2017-01-06 
			exit;
		}
		if($ext != "doc" && $ext != "docx" && $ext != "txt" && $ext != "ppt" && $ext != "pptx" && $ext != "xls" && $ext != "xlsx" && $ext != "zip" && $ext != "rar" && $ext != "gif" && $ext != "jpg" && $ext != "jpeg" && $ext != "png" && $ext != "pdf" && $ext != "hwp") {
			echo "<script>alert('이미지, 문서, 압축 파일만 올릴수 있습니다.');history.go(-1);</script>";
			exit;
		}

		$upload_dir = "/var/www/html/stc/misc/upload/tech/tech";

		$conf_file['upload_path'] = $upload_dir;
		$conf_file['allowed_types'] = 'zip|rar|txt|doc|pdf|ppt|xls|pptx|docx|xlsx|gif|jpg|png|hwp|jpeg';
		$conf_file['overwrite']  = false;
		$conf_file['encrypt_name']  = true;
		$conf_file['remove_spaces']  = true;

		$this->load->library( 'upload', $conf_file );

		if( $this->upload->do_upload('cfile') ) {
			$data = array('upload_data' => $this->upload->data());
			$filename = $data['upload_data']['orig_name'];
			$lcfilename = $data['upload_data']['file_name'];
		} else {
			alert('업로드 파일에 문제가 있습니다. 다시 처리해 주시기 바랍니다.');
			exit;
		}

		$data1 = array(
			'customer'                      => $this->input->post('customer'),
			'customer_manager'              => $this->input->post('customer_manager'),
			'produce'                       => $this->input->post('produce'),
			'hardware'                      => $this->input->post('hardware'),
			'sn'                            => $this->input->post('serial'),
			'version'                       => $this->input->post('version'),
			'license'                       => $this->input->post('license'),
			'work_name'                     => $this->input->post('work_name'),
			'doc_num'                       => $doc_final,
			'total_time'                    => $total_time,
			'income_time'                   => $this->input->post('income_time'),
			'start_time'                    => $this->input->post('start_time'),
			'end_time'                      => $this->input->post('end_time'),
			'engineer'                      => $this->input->post('engineer'),
			'handle'                        => $this->input->post('handle'),
			'subject'                       => $this->input->post('subject'),
			'work_process_time'             => $work_process_time,
			'work_process'                  => $work_process,
			'err_type'                                  => $this->input->post('err_type'),
			'warn_level'                                      => $this->input->post('warn_level'),
			'warn_type'                                 => $this->input->post('warn_type'),
			'work_action'                               => $this->input->post('work_action'),
			'file_changename'               => $lcfilename,
			'file_realname'                 => $filename,
			'comment'			=> $this->input->post('comment'),
			'result'                        => $this->input->post('result'),
			'update_date'                   => date("Y-m-d H:i:s")
		);
	}else{
		$data1 = array(
			'customer'                      => $this->input->post('customer'),
			'customer_manager'              => $this->input->post('customer_manager'),
			'produce'                       => $this->input->post('produce'),
			'hardware'                      => $this->input->post('hardware'),
			'sn'                            => $this->input->post('serial'),
			'version'                       => $this->input->post('version'),
			'license'                       => $this->input->post('license'),
			'work_name'                     => $this->input->post('work_name'),
			'doc_num'                       => $doc_final,
			'total_time'                    => $total_time,
			'income_time'                   => $this->input->post('income_time'),
			'start_time'                    => $this->input->post('start_time'),
			'end_time'                      => $this->input->post('end_time'),
			'engineer'                      => $this->input->post('engineer'),
			'handle'                        => $this->input->post('handle'),
			'subject'                       => $this->input->post('subject'),
			'work_process_time'             => $work_process_time,
			'work_process'                  => $work_process,
			'err_type'                                  => $this->input->post('err_type'),
			'warn_level'                                      => $this->input->post('warn_level'),
			'warn_type'                                 => $this->input->post('warn_type'),
			'work_action'                               => $this->input->post('work_action'),
			'comment'			=> $this->input->post('comment'),
			'result'                        => $this->input->post('result'),
			'update_date'                   => date("Y-m-d H:i:s")
		);
	}

        if ($seq == null) {                     // insert 모드
            $data2 = array(
                'writer'                        => $this->name,
                'insert_date'                   => date("Y-m-d H:i:s")
                );
            $data = array_merge($data1, $data2);
            $result = $this->STC_tech_doc->tech_doc_insert($data, $mode = 0);
        } else {                                        // modify 모드
            $data2 = array(
                'writer'            => $this->input->post('writer')
                );
            $data = array_merge($data1, $data2);
            $result = $this->STC_tech_doc->tech_doc_insert($data, $mode = 1, $seq);
        }

        if($result) {
          echo "<script>alert('정상적으로 처리되었습니다.');location.href='".site_url()."/tech_board/tech_doc_list';</script>";
        } else {
        echo "<script>alert('정상적으로 처리되지 못했습니다. 다시 입력해 주세요.');history.go(-1);</script>";
        }*/
    }

    function tech_doc_input_action() {
     if( $this->id === null ) {
        redirect( 'account' );
     }
     $this->load->model(array( 'STC_tech_doc' ));
     $seq = $this->input->post('seq');
     

     $filename = NULL;
          $lcfilename = NULL;

          $csize = $_FILES["cfile"]["size"];
          $cname = $_FILES["cfile"]["name"];
          $ext = substr(strrchr($cname,"."),1);
          $ext = strtolower($ext);

        // 문서번호 생성 함수
        //
     $work_date = $this->input->post('income_time');
     $today_month = date("n",strtotime($work_date) );
     $today_year = date("Y",strtotime($work_date) );
     $doc_final = "DUIT-TECH-08-".date("y-m",strtotime($work_date) )."-";
     $doc_last = $this->STC_tech_doc->tech_doc_num_count($today_year,$today_month,$seq);
     $doc_last += 1;
     $doc_final .= sprintf("%03d",$doc_last);

        // work 부분 합 치기
     $work_time_s = $this->input->post('work_time_s');
     $work_time_e = $this->input->post('work_time_e');
     $work_text = $this->input->post('work_text');


     $work_process_time="";
     $work_process="";

     for($i=0;$i<count($work_time_s);$i++){
        $work_process_time .=$work_time_s[$i];
        $work_process_time .="-";
        $work_process_time .= $work_time_e[$i];
        $work_process .=$work_text[$i];

        if($i>=0 and $i<count($work_time_s)){
            $work_process_time .=";;";
            $work_process .=";;";
        }
    }
        // insert / modify 기본 내용

    $s = $this->input->post('start_time');
    $e = $this->input->post('end_time');

    $ss = explode(":", $s);
    $ee = explode(":", $e);

    if($ee[1]<$ss[1]){

        $ee[0]--;
        $ee[1]+=60;

    }

    $results = mktime($ee[0]-$ss[0],$ee[1]-$ss[1],0,0,0,0);

    $total_time = date("H:i",$results);

    //점검항목 리스트 가져갈 것인지
    $checkListForm = $this->input->post('checkListForm');


if ($csize > 0 && $cname) {
    if ($csize > 104857600) {
        echo "<script>alert('첨부파일의 용량이 초과하였습니다.\\n100MB 이하의 파일을 첨부해주세요.');history.go(-1);</script>"; /* 김수성 수정 2017-01-06 */
        exit;
    }
    if($ext != "doc" && $ext != "docx" && $ext != "txt" && $ext != "ppt" && $ext != "pptx" && $ext != "xls" && $ext != "xlsx" && $ext != "zip" && $ext != "rar" && $ext != "gif" && $ext != "jpg" && $ext != "jpeg" && $ext != "png" && $ext != "pdf" && $ext != "hwp") {
        echo "<script>alert('이미지, 문서, 압축 파일만 올릴수 있습니다.');history.go(-1);</script>";
        exit;
    }

    $upload_dir = "/var/www/html/stc/misc/upload/tech/tech";

    $conf_file['upload_path'] = $upload_dir;
    $conf_file['allowed_types'] = 'zip|rar|txt|doc|pdf|ppt|xls|pptx|docx|xlsx|gif|jpg|png|hwp|jpeg';
    $conf_file['overwrite']  = false;
    $conf_file['encrypt_name']  = true;
    $conf_file['remove_spaces']  = true;

    $this->load->library( 'upload', $conf_file );

    if( $this->upload->do_upload('cfile') ) {
        $data = array('upload_data' => $this->upload->data());
        $filename = $data['upload_data']['orig_name'];
        $lcfilename = $data['upload_data']['file_name'];
    } else {
        alert('업로드 파일에 문제가 있습니다. 다시 처리해 주시기 바랍니다.');
        exit;
    }

    $data1 = array(
        'forcasting_seq'		        => $this->input->post('customer'),
        'customer'                      => $this->input->post('customerName'),
        'customer_manager'              => $this->input->post('customer_manager'),
        'project_name'                  => $this->input->post('project_name'),
        'manager_mail'            	    => $this->input->post('manager_mail'),
        'produce'                       => $this->input->post('produce'),
        'hardware'                      => $this->input->post('hardware'),
        'sn'                            => $this->input->post('serial'),
        'version'                       => $this->input->post('version'),
        'license'                       => $this->input->post('license'),
        'work_name'                     => $this->input->post('work_name'),
        'doc_num'                       => $doc_final,
        'total_time'                    => $total_time,
        'income_time'                   => $this->input->post('income_time'),
        'start_time'                    => $this->input->post('start_time'),
        'end_time'                      => $this->input->post('end_time'),
        'engineer'                      => $this->input->post('engineer'),
        'handle'                        => $this->input->post('handle'),
        'subject'                       => $this->input->post('subject'),
        'work_process_time'             => $work_process_time,
        'work_process'                  => $work_process,
        'err_type'                      => $this->input->post('err_type'),
        'warn_level'                    => $this->input->post('warn_level'),
        'warn_type'                     => $this->input->post('warn_type'),
        'work_action'                   => $this->input->post('work_action'),
        'file_changename'               => $lcfilename,
        'file_realname'                 => $filename,
        'comment'			            => $this->input->post('comment'),
        'result'                        => $this->input->post('result'),
        'update_date'                   => date("Y-m-d H:i:s"),
        'sign_consent'                  => $this->input->post('sign_consent')
    );
}else{
    $data1 = array(
        'forcasting_seq'		        => $this->input->post('customer'),
        'customer'                      => $this->input->post('customerName'),
        'customer_manager'              => $this->input->post('customer_manager'),
        'project_name'                  => $this->input->post('project_name'),
        'manager_mail'       		    => $this->input->post('manager_mail'),
        'produce'                       => $this->input->post('produce'),
        'hardware'                      => $this->input->post('hardware'),
        'sn'                            => $this->input->post('serial'),
        'version'                       => $this->input->post('version'),
        'license'                       => $this->input->post('license'),
        'work_name'                     => $this->input->post('work_name'),
        'doc_num'                       => $doc_final,
        'total_time'                    => $total_time,
        'income_time'                   => $this->input->post('income_time'),
        'start_time'                    => $this->input->post('start_time'),
        'end_time'                      => $this->input->post('end_time'),
        'engineer'                      => $this->input->post('engineer'),
        'handle'                        => $this->input->post('handle'),
        'subject'                       => $this->input->post('subject'),
        'work_process_time'             => $work_process_time,
        'work_process'                  => $work_process,
        'err_type'                      => $this->input->post('err_type'),
        'warn_level'                    => $this->input->post('warn_level'),
        'warn_type'                     => $this->input->post('warn_type'),
        'work_action'                   => $this->input->post('work_action'),
        'comment'			            => $this->input->post('comment'),
        'result'                        => $this->input->post('result'),
        'update_date'                   => date("Y-m-d H:i:s"),
        'sign_consent'                  => $this->input->post('sign_consent')
    );
}

    if ($seq == null) {                     // insert 모드
        $data2 = array(
            'writer'                        => $this->name,
            'insert_date'                   => date("Y-m-d H:i:s")
            );
        $data = array_merge($data1, $data2);
        $result = $this->STC_tech_doc->tech_doc_insert($data, $mode = 0);
    } else {                                        // modify 모드
        $data2 = array(
            'writer'            => $this->input->post('writer')
            );
        $data = array_merge($data1, $data2);
        $result = $this->STC_tech_doc->tech_doc_insert($data, $mode = 1, $seq);
    }

    if($result) {
      if($checkListForm == ''){
        echo "<script>alert('정상적으로 처리되었습니다.');location.href='".site_url()."/tech_board/tech_doc_list';</script>";
      }else{
        echo "<script>alert('정상적으로 처리되었습니다.');opener.parent.formAction2({$checkListForm});window.close();</script>";
      }
    } else {
        echo "<script>alert('정상적으로 처리되지 못했습니다. 다시 입력해 주세요.');history.go(-1);</script>";
    }
}

    function tech_doc_input_action2(){
        $work_text = $this->input->post('work_text');
        $work_process =$work_text[0];

        $data['customer'] = $this->input->post('customer');
        $data['customerName'] = $this->input->post('customerName');
        $data['project_name'] = $this->input->post('project_name');
        $data['work_name'] = $this->input->post('work_name');
        $data['income_time'] = $this->input->post('income_time');
        $data['err_type'] = $this->input->post('err_type');
        $data['warn_level'] = $this->input->post('warn_level');
        $data['warn_type'] = $this->input->post('warn_type');
        $data['work_action'] = $this->input->post('work_action');
        $data['customer_manager'] = $this->input->post('customer_manager');
        $data['manager_mail'] = $this->input->post('manager_mail');
        $data['start_time'] = $this->input->post('start_time');
        $data['end_time'] = $this->input->post('end_time');
        $data['engineer'] = $this->input->post('engineer');
        $data['handle'] = $this->input->post('handle');

        $data['produceList'] = $this->input->post('produceList');
        $data['versionList'] = $this->input->post('versionList');
        $data['hardwareList'] = $this->input->post('hardwareList');
        $data['licenseList'] = $this->input->post('licenseList');
        $data['serialList'] = $this->input->post('serialList');
        $data['seqList'] = $this->input->post('seqList');

        $data['checkLength'] = $this->input->post('checkLength');
        $data['produceIdx'] = $this->input->post('produceIdx');
        $data['work_process'] = $work_process;

        $data['method'] = 'post';

        $this->load->view('tech_doc_input2',$data);
    }

    function tech_doc_view() {

        if( $this->id === null) {
            if($this->customerid <> null ){

            }else{
                redirect( 'account' );
            }    
        }

        $this->load->Model('STC_tech_doc');
        $seq = $this->input->get( 'seq' );
        $mode = $this->input->get( 'mode' );
        $data['view_val'] = $this->STC_tech_doc->tech_doc_view($seq);
        $data['customer'] = $this->STC_tech_doc->get_customer();
        $data['seq'] = $seq;
        if($mode == "view") {
            $this->load->view( 'tech_doc_view', $data );
        } else {
            $this->load->view( 'tech_doc_modify', $data );
        }
    }

    function tech_doc_view_test() {

        if( $this->id === null ) {
            redirect( 'account' );
        }

        $this->load->Model('STC_tech_doc');
        $seq = $this->input->get( 'seq' );
        $mode = $this->input->get( 'mode' );
        $data['view_val'] = $this->STC_tech_doc->tech_doc_view($seq);
        $data['customer'] = $this->STC_tech_doc->get_customer();
        $data['seq'] = $seq;
        if($mode == "view") {
            $this->load->view( 'tech_doc_view_test', $data );
        } else {
            $this->load->view( 'tech_doc_modify_test', $data );
        }
    }

    function tech_doc_print_action() {
        if( $this->id === null) {
            if($this->customerid <> null ){
            }else{
                redirect( 'account' );
            }    
        }

        $this->load->Model('STC_tech_doc');
        if(isset($_GET['seq'])){
            $seq = $this->input->get( 'seq' );
        }else{//고객사는 seq 암호화해서 들어와서
            if(strpos($_SERVER['REQUEST_URI'], '?') !== false) {  
                $seq = explode('?',$_SERVER['REQUEST_URI']);
                $seq = base64_decode ($seq[1]);
                if(strpos($seq,'seq')!== false){
                    $seq = explode('=',$seq);
                    $seq = $seq[1]; 
                }else{
                    $seq="";
                }
            }else{
                $seq=""; 
            }
        }
        $data['view_val'] = $this->STC_tech_doc->tech_doc_view($seq);
        $this->load->view( 'tech_doc_print', $data );

    }


    function tech_doc_delete_action() {
        if( $this->id === null ) {
            redirect( 'account' );
        }

        $this->load->helper('alert');
        $this->load->model(array( 'STC_tech_doc' ));
        $seq = $this->input->get( 'seq' );
        if ($seq != null) {
            $tdata = $this->STC_tech_doc->tech_doc_delete($seq);
        }
        if ($tdata) {
            echo "<script>alert('삭제완료 되었습니다.');location.href='".site_url()."/tech_board/tech_doc_list';</script>";
        } else {
            echo "<script>alert('정상적으로 처리되지 못했습니다.\n다시 시도해 주세요.');</script>";
        }
    }
            // 장비등록 관련 페이지
            // 작성자 : 김수성
            // View에서 쓸 변수 : SQL정보를 배열로 받을 변수 view_val
            // 여기서는
            // $data['view_val'] = $this->STC_tech_doc->tech_device_view($seq);
            // 으로 정의
            //
    function tech_device_list() {
        if( $this->id === null ) {
            redirect( 'account' );
        }

        $this->load->Model(array('STC_tech_doc'));
        if(isset($_GET['cur_page'])) {
            $cur_page = $_GET['cur_page'];
        }
        else {
            $cur_page = 0;
                    }                                        //      현재 페이지
                    $no_page_list = 10;                     //      한페이지에 나타나는 목록 개수

                    if(isset($_GET['searchkeyword'])) {
                        $search_keyword = $_GET['searchkeyword'];
                    }
                    else {
                        $search_keyword = "";
                    }
                    if(isset($_GET['search1'])) {
                        $search1 = $_GET['search1'];
                    }
                    else {
                        $search1 = "";
                    }

                    $data['search_keyword'] = $search_keyword;
                    $data['search1'] = $search1;
                    if  ( $cur_page <= 0 )
                        $cur_page = 1;
                    $data['cur_page'] = $cur_page;

                    $user_list_data = $this->STC_tech_doc->tech_device_list($search_keyword, $search1, ( $cur_page - 1 ) * $no_page_list, $no_page_list);
                    $data['count'] = $this->STC_tech_doc->tech_device_list_count($search_keyword, $search1)->ucount;
                    $data['list_val'] = $user_list_data['data'];
                    $data['list_val_count'] = $user_list_data['count'];
                    $total_page = 1;
                    if  ( $data['count'] % $no_page_list == 0 )
                        $total_page = floor( ( $data['count'] / $no_page_list ) );
                    else
                            $total_page = floor( ( $data['count'] / $no_page_list + 1 ) );                  //      전체 페이지 개수

                        $start_page =  floor(($cur_page - 1 ) / 10) * 10  + 1 ;
                        $end_page = 0;
                        if  ( floor( ( $cur_page - 1 ) / 10 ) < floor( ( $total_page - 1 ) / 10 ) )
                            $end_page = ( floor( ( $cur_page - 1 ) / 10 ) + 1 ) * 10;
                        else
                            $end_page = $total_page;
                        $data['no_page_list'] = $no_page_list;
                        $data['total_page'] = $total_page;
                        $data['start_page'] = $start_page;
                        $data['end_page'] = $end_page;
                        $this->load->view( 'tech_device_list', $data );
            }


    // 장비등록  보기/수정 뷰
    function tech_device_view() {
        if( $this->id === null ) {
            redirect( 'account' );
        }

        $this->load->Model(array('STC_tech_doc'));
        $mode = $this->input->get( 'mode' );
        $data['customer'] = $this->STC_tech_doc->get_customer();
        // $product_serial = $this->input->get( 'product_serial' );
        $seq = $this->input->get( 'seq' );

        $data['view_val'] = $this->STC_tech_doc->tech_device_view($seq);
        $data['check_list'] =$this->STC_tech_doc->check_list_template($productName = 'all');
//	print_r($data['view_val']);
        $data['seq'] = $seq;
        if($mode == "view") {
            $this->load->view( 'tech_device_view', $data );
        } else {
            $this->load->view( 'tech_device_modify', $data );
        }
    }


    function tech_device_input() {

        if( $this->id === null ) {
            redirect( 'account' );
        }

        $this->load->Model(array('STC_tech_doc'));


        $data['customer'] = $this->STC_tech_doc->get_customer();
        $this->load->view( 'tech_device_input', $data );
    }

    function tech_device_input_action() {
        if( $this->id === null ) {
            redirect( 'account' );
        }
        $this->load->model(array( 'STC_tech_doc' ));
        $seq = $this->input->post('seq');

         $custom_title = $this->input->post('custom_title');
         $custom_detail = $this->input->post('custom_detail');

        $data = array(
            'product_version'              => $this->input->post('product_version'),
            'product_state'                => $this->input->post('product_state'),
            'product_licence'              => $this->input->post('product_licence'),
            'product_purpose'              => $this->input->post('product_purpose'),
            'product_check_list'           => $this->input->post('product_check_list'),
            'custom_title'                 => $custom_title[0],
            'custom_detail'                => $custom_detail[0],
            );
        if ($seq == null) {
            $result = $this->STC_tech_doc->tech_device_insert($data, $mode = 0,$seq=0);
        } else {
            $result = $this->STC_tech_doc->tech_device_insert($data, $mode = 1, $seq);
        }
        if($result) {
            echo "<script>alert('정상적으로 처리되었습니다.');location.href='".site_url()."/tech_board/tech_device_list';</script>";
        } else {
            echo "<script>alert('정상적으로 처리되지 못했습니다. 다시 입력해 주세요.');history.go(-1);</script>";
        }
    }


    function tech_device_delete_action() {
        if( $this->id === null ) {
            redirect( 'account' );
        }

        $this->load->helper('alert');
        $this->load->model(array( 'STC_tech_doc' ));
        $seq = $this->input->get( 'seq' );
        if ($seq != null) {
            $tdata = $this->STC_tech_doc->tech_device_delete($seq);
        }
        if ($tdata) {
            echo "<script>alert('삭제완료 되었습니다.');location.href='".site_url()."/tech_board/tech_device_list';</script>";
        } else {
            echo "<script>alert('정상적으로 처리되지 못했습니다.\n다시 시도해 주세요.');</script>";
        }
    }


    function search_device(){
      $tmp = $_GET['name'];
    //   $data = $this->db->query("select * from sales_forcasting as t1 join sales_forcasting_product as t2 join product as t3 on t1.seq=t2.forcasting_seq and t2.product_code=t3.seq where t1.seq='".$tmp."'")->result();
      $data = $this->db->query("select * ,t2.seq AS product_seq from sales_forcasting as t1 join sales_forcasting_product as t2 join product as t3 on t1.seq = t2.forcasting_seq and t2.product_code = t3.seq WHERE (((SELECT sub_project_add FROM sales_forcasting where seq='".$tmp."') is null and t1.seq='".$tmp."') OR ((SELECT sub_project_add FROM sales_forcasting where seq='".$tmp."')IS not NULL AND t1.sub_project_add=(SELECT sub_project_add FROM sales_forcasting where seq='".$tmp."'))) AND (t2.maintain_target IS null OR t2.maintain_target ='Y')")->result();
      $this->load->view('search_device',array('input'=>$data));
    }

    function search_se(){
      $data = $this->db->query("select * from user where company_name like '%두리안정보%';")->result();
      $this->load->view('search_se',array('input'=>$data));
    }

    function search_manager(){
      $tmp = $_GET['name'];
      $data = $this->db->query("select * from sales_forcasting where seq='".$tmp."'")->result();
      $this->load->view('search_manager',array('input'=>$data));
    }

    function tech_doc_signature(){
        // $tmp = $_GET['name'];
        // $data = $this->db->query("select * from sales_forcasting as t1 join sales_forcasting_product as t2 join product as t3 on t1.seq=t2.forcasting_seq and t2.product_code=t3.seq where t1.seq='".$tmp."'")->result();
        // $this->load->view('search_device',array('input'=>$data));
        $data = $this->db->query("select * from sales_forcasting ")->result();
        $this->load->view('tech_doc_signature',array('input'=>$data));
    }

    //제품별 템플릿 생성 페이지
    function product_check_list_input(){
      //   $data = $this->db->query("select * from sales_forcasting as t1 join sales_forcasting_product as t2 join product as t3 on t1.seq=t2.forcasting_seq and t2.product_code=t3.seq where t1.seq='".$tmp."'")->result();
        $data = $this->db->query("select * from product_check_list_template ORDER BY seq asc")->result();
        $this->load->view('product_check_list_input',array('input'=>$data));
    }

    //제품별 템플릿 생성 
    function product_check_list_input_action(){
        if( $this->id === null ) {
            redirect( 'account' );
        }
        $this->load->model(array( 'STC_tech_doc' ));         
        $data['product_name'] = $this->input->post('product_name');
        $data['check_list'] = $this->input->post('work_text');

        $result = $this->STC_tech_doc->product_check_list_input($data);
        if($result) {
            echo "<script>opener.opener.location.reload();opener.parent.close();alert('정상적으로 처리되었습니다.');self.close();</script>";
        } else {
            echo "<script>alert('정상적으로 처리되지 못했습니다. 다시 입력해 주세요.');history.go(-1);</script>";
        }

    }

    //제품별 템플릿 뷰
    function product_check_list_view(){
        if( $this->id === null ) {
            redirect( 'account' );
        }
        $this->load->model(array( 'STC_tech_doc' ));         
        $product_name = $this->input->get('productName');
        $data['check_item']= $this->STC_tech_doc->check_list_template($product_name);

        $this->load->view('product_check_list_view',$data);
    }

    //제품별 템플릿 리스트
    function product_check_list(){
        if( $this->id === null ) {
            redirect( 'account' );
        }
        $this->load->model(array( 'STC_tech_doc' ));         
        $data['check_item']= $this->STC_tech_doc->check_list_template("all");

        $this->load->view('product_check_list',$data);

    }

    //제품별 템플릿 커스텀
    function product_check_list_custom(){
        if( $this->id === null ) {
            redirect( 'account' );
        }
        $this->load->model(array( 'STC_tech_doc' ));
        $product_name = $this->input->get('productName');         
        $data['check_item']= $this->STC_tech_doc->check_list_template($product_name);
        $this->load->view('product_check_list_custom',$data);

    }

    //제품별 템플릿 삭제
    function product_check_list_delete(){
        if( $this->id === null ) {
            redirect( 'account' );
        }
        $this->load->model(array( 'STC_tech_doc' ));
        $productName =  $this->input->get('productName');
        $result = $this->STC_tech_doc->product_check_list_delete($productName);
        if($result) {
            echo "<script>alert('삭제완료 되었습니다.');location.href='".site_url()."/tech_board/product_check_list';</script>";
        } else {
            echo "<script>alert('정상적으로 처리되지 못했습니다. 다시 입력해 주세요.');history.go(-1);</script>";
        }

    }

    //제품별 템플릿 수정
    function product_check_list_modify(){
        if( $this->id === null ) {
            redirect( 'account' );
        }
        $this->load->model(array( 'STC_tech_doc' ));
        $product_name = $this->input->get('productName');         
        $data['check_item']= $this->STC_tech_doc->check_list_template($product_name);
        $this->load->view('product_check_list_modify',$data);
    }

    //제품별 템플릿 수정
    function product_check_list_update_action(){

        if( $this->id === null ) {
            redirect( 'account' );
        }
        $this->load->model(array( 'STC_tech_doc' ));
        $data['seq'] = $this->input->post('seq');         
        $data['product_name'] = $this->input->post('product_name');
        $data['check_list'] = $this->input->post('work_text');

        $result = $this->STC_tech_doc->product_check_list_update($data);
        if($result) {
            echo "<script>alert('정상적으로 처리되었습니다.');opener.parent.close();self.close();</script>";
        } else {
            echo "<script>alert('정상적으로 처리되지 못했습니다. 다시 입력해 주세요.');history.go(-1);</script>";
        }

    }

}

?>
