<?php
error_reporting(E_ALL);
header("Content-type: text/html; charset=utf-8");

class Purchase_sales extends CI_Controller {

	var $id = '';

	function __construct() {
		parent::__construct();
		$this->id = $this->phpsession->get( 'id', 'stc' );
		$this->name = $this->phpsession->get( 'name', 'stc' );
		$this->lv = $this->phpsession->get( 'lv', 'stc' );
		$this->cnum = $this->phpsession->get( 'cnum', 'stc' );
		$this->seq = $this->phpsession->get( 'seq', 'stc' );
		$this->load->Model(array('sales/STC_Maintain', 'STC_Common','sales/STC_Forcasting','sales/STC_User', 'sales/STC_Purchase_sales'));
	}


function purchase_sales_view() {

		if( $this->id === null ) {
			redirect( 'account' );
		}

		if(isset($_GET['year']) && isset($_GET['month'])) {
			$month = str_pad($_GET['month'], 2, "0", STR_PAD_LEFT);
			$date = $_GET['year']."-".$month;
		}else{
			$date = date("Y-m");
		}

		if(isset($_GET['company'])) {
			$company = $_GET['company'];
		}else{
			$company = "DUIT";
		}
		$data['company'] = $company;

		if($company == "DUIT"){
			$company = "'사업1부','사업2부','기술지원부'";
		}else if ($company == "ICT"){
			$company = "'ICT'";
		}else if ($company == "MG"){
			$company = "'MG'";
		}else if ($company == "DBS"){
			$company = "'DBS'";
		}

		// $data['operating_sum'] = $this->STC_Purchase_sales->operating_sum($date, $company); // 운영비
		//
		// $data['maintain_ext'] = $this->STC_Purchase_sales->monthly_sum($date, 'maintain_ext', $company); // 수주완료 내 유지보수

		$data['sum_bill_cnt'][0] = $this->STC_Purchase_sales->sum_bill_cnt('계', $date, $company); // 전자계산서
		$data['sum_bill_cnt'][1] = $this->STC_Purchase_sales->sum_bill_cnt('종', $date, $company); // 종이계산서


		$data['forcasting_val'] = $this->STC_Purchase_sales->purchase_forcasting_bill($date,$company);
		$data['maintain_val'] = $this->STC_Purchase_sales->purchase_maintain_bill($date,$company);
		$data['distinct_maintain_seq'] = $this->STC_Purchase_sales->distinct_maintain_seq($date,$company);
		$data['procurement_val'] = $this->STC_Purchase_sales->purchase_procurement_bill($date,$company);

		$data['operating_val'] = $this->STC_Purchase_sales->operating_bill($date, $company);

		// 사업부별 합계
		$data['dept_sum'] = $this->STC_Purchase_sales->dept_sum($date);

		$this->load->view('sales/purchase_sales_view', $data);
}


function operating_insert(){


// 새로운거 인서트
if (isset($_POST['new_issuance_month'])) {
	$issuance_date = $this->input->post('new_issuance_month');
	$customer_name = $this->input->post('new_customer');
	$end_user = $this->input->post('new_enduser');
	$item = $this->input->post('new_project_name');
	$issuance_amount = $this->input->post('new_issuance');
	$tax_amount = $this->input->post('new_tax');
	$total_amount = $this->input->post('new_sum');
	$bill_type = $this->input->post('new_tax_type');
	$type = $this->input->post('new_type');
	$dept = $this->input->post('dept');
	$oper_yn = $this->input->post('new_oper_yn');
	// if($company == "DUIT"){
	// 	$dept = "사업1부";
	// }else{
	// 	$dept = $company;
	// }
	$insert_date = array();

	for ($i=0; $i < count($total_amount); $i++) {

		$arr = array(
			'type' => $type[$i],
			'customer_name' => $customer_name[$i],
			'end_user' => $end_user[$i],
			'item' => $item[$i],
			'issuance_amount' => $issuance_amount[$i] == '' ? 0 : str_replace(',','',$issuance_amount[$i]),
			'tax_amount' => $tax_amount[$i] == '' ? 0 :str_replace(',','',$tax_amount[$i]),
			'total_amount' => $total_amount[$i] == '' ? 0 :str_replace(',','',$total_amount[$i]),
			'issuance_date' => $issuance_date[$i],
			'issuance_month' => substr($issuance_date[$i],0,7),
			'dept' => $dept,
			'bill_type' => $bill_type[$i],
			'oper_yn' => $oper_yn[$i],
			'write_id' => $this->id,
			'insert_date' => date("Y-m-d H:i:s")
		);
		array_push($insert_date, $arr);
	}

	$this->STC_Purchase_sales->operating_insert($insert_date);

}

// 기조ㅗㄴ꺼 딜라이트
$del_seq = $this->input->post('operating_del_seq');
if ($del_seq != "") {
	$del_arr = explode(",",$del_seq);
	// var_dump($del_arr);
	for ($i=1; $i < count($del_arr); $i++) {
		$seq = $del_arr[$i];
		$this->STC_Purchase_sales->operating_del($seq);
	}
}


// 수정된거 업돠이투
$m_issuance_date = $this->input->post('modify_issuance_month');
$m_customer_name = $this->input->post('modify_customer');
$m_end_user = $this->input->post('modify_enduser');
$m_item = $this->input->post('modify_project_name');
$m_issuance_amount = $this->input->post('modify_issuance');
$m_tax_amount = $this->input->post('modify_tax');
$m_total_amount = $this->input->post('modify_sum');
$m_bill_type = $this->input->post('modify_tax_type');
$m_type = $this->input->post('modify_type');
$m_seq = $this->input->post('modify_operating_seq');

if (isset($_POST['modify_issuance_month'])) {
	for ($i=0; $i < count($m_issuance_date); $i++) {
		$update_arr = array(
				'issuance_date'=>$m_issuance_date[$i],
				'issuance_month' => substr($m_issuance_date[$i],0,7),
				'customer_name'=>$m_customer_name[$i],
				'end_user'=>$m_end_user[$i],
				'item'=>$m_item[$i],
				'issuance_amount'=> $m_issuance_amount[$i] == '' ? 0 :str_replace(',','',$m_issuance_amount[$i]),
				'tax_amount'=> $m_tax_amount[$i] == '' ? 0 :str_replace(',','',$m_tax_amount[$i]),
				'total_amount'=> $m_total_amount[$i] == '' ? 0 :str_replace(',','',$m_total_amount[$i]),
				'bill_type'=>$m_bill_type[$i],
				'type'=>$m_type[$i],
				'update_id' =>$this->id,
				'update_date'=>date("Y-m-d H:i:s")
		);
	$seq = $m_seq[$i];
	$this->STC_Purchase_sales->operating_update($update_arr, $seq);

	}
}

        echo "<script>alert('처리되었습니다.');history.go(-1);</script>";
}


function quarterly_purchase_sales_view(){
		if( $this->id === null ) {
			redirect( 'account' );
		}

		$this->load->view('sales/purchase_sales_quarterly_view');
}


function quarterly_purchase_sales(){
		if( $this->id === null ) {
			redirect( 'account' );
		}

		if(isset($_POST['year'])){
			$year = $_POST['year'];
			$month = $_POST['quarter']*3; //분기에 3을 곱해서 임의의 분기 내 월을 지정
		}else{
			$year = date("Y");
			$month = date("m");
		}
		$dept_code = $_POST['dept'];

//여기서 각각 상품 용역 조달 쿼리문으로 보내자 달별 for문은 model에서 돌려서 배열로 뽑아오자
		$data['result1'] = $this->STC_Purchase_sales->quarterly_forcasting($year, $month, $dept_code, 1);
		$data['result2'] = $this->STC_Purchase_sales->quarterly_maintain($year, $month, $dept_code, 2);
		$data['result3'] = $this->STC_Purchase_sales->quarterly_forcasting($year, $month, $dept_code, 4);
		$data['result4'] = $this->STC_Purchase_sales->quarterly_operation($year, $month, $dept_code);
		// $data['product'] = $this->STC_Purchase_sales->quarterly_forcasting($year, $month, $dept_code, 1);
		// $data['service'] = $this->STC_Purchase_sales->quarterly_maintain($year, $month, $dept_code, 2);
		// $data['support'] = $this->STC_Purchase_sales->quarterly_forcasting($year, $month, $dept_code, 4);
		// $data['operation'] = $this->STC_Purchase_sales->quarterly_operation($year, $month, $dept_code);
	  echo json_encode($data);
}



}


 ?>
